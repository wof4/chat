{"version":3,"sources":["components/pagesComponents/messageField/messageField.module.css","components/pagesComponents/UsersLists/communicationList.module.css","components/pagesComponents/messages/messageBord.module.css","components/pages/main/main-page.module.css","api/api.tsx","api/CommunicationApi.tsx","api/mainApi.tsx","redux/reducers/mainReducer.tsx","api/socket.ts","api/socketsResive.ts","api/socketsSend.ts","redux/reducers/communicationReducer.tsx","selectors.tsx","components/pagesComponents/alert/CustomAlert.tsx","components/pagesComponents/header/Header.tsx","components/pagesComponents/plugs/NoUsersPlug.jsx","components/pagesComponents/avatar/Avatar.jsx","components/pagesComponents/card/UserCard.jsx","components/pagesComponents/UsersLists/Users.jsx","components/pagesComponents/tabs/Tabs.tsx","components/pagesComponents/UsersLists/UsersLists.jsx","components/pagesComponents/messages/message/Message.jsx","components/pagesComponents/messages/message_utils.jsx","components/pagesComponents/messages/MessageBord.jsx","components/pagesComponents/messageField/NewMessageField.jsx","components/pages/chat/chatPage.tsx","components/pagesComponents/UserFields.tsx","constants.ts","components/pages/login/LoginPage.tsx","components/pages/main/MainPage.tsx","App.tsx","redux/reduxStore.tsx","index.tsx","components/pagesComponents/messages/message/message.module.css","components/pagesComponents/card/user-card.module.css","components/pages/chat/chat-page.module.css","components/pagesComponents/plugs/plugs.module.css"],"names":["module","exports","instance","Axios","create","baseURL","headers","withCredentials","CommunicationApi","getComData","autorId","get","then","res","data","MainApi","login","post","register","initialState","authData","isLoading","error","userListStatus","actions","payload","type","setShowUsersListStatusTc","status","dispatch","mainReducer","state","action","socket","io","transports","dis","ResiveSocket","on","id","getComDataTc","message","console","log","mainActions","SendSocket","sendNewMessage","messageData","emit","sendMySocketId","updateNewMessagesStatus","userId","dialogId","dialogsList","allUsersList","selectedUser","progressMessages","setSelectedUserTc","value","statusCode","allUsers","comList","communicationReducer","getAuthData","getLoadingStatus","getErrorMessage","getUserListStatus","getAllUsersList","getDialogsList","getSelectedUser","getActiveId","getDialogsIsLoading","Alert","React","props","ref","elevation","variant","CustomAlert","text","open","setOpen","handleClose","event","reason","Stack","spacing","sx","width","Snackbar","autoHideDuration","onClose","severity","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","Header","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","Box","flexGrow","AppBar","Toolbar","edge","mr","Typography","noWrap","component","xs","sm","placeholder","inputProps","md","NoUsersPlug","className","s","plug_wrapper","fontSize","plug_hand_icon","plug_text","AvatarPhoto","name","w","h","Avatar","bgcolor","zIndex","alt","src","UserCard","item","activeId","openDialog","Icon","isShowLastMesg","_id","user_wrapper_active","user_wrapper","user_info","user_text","messages","length","user_last_msg","messageText","new_message_count","newMessagesCount","Users","UserList","useSelector","map","Tabs","dialogList","setSelectedUser","setValue","user","typography","TabContext","borderBottom","borderColor","TabList","onChange","newValue","Tab","label","TabPanel","MailOutlineIcon","CircularProgress","left","bottom","TouchAppIcon","UsersLists","useDispatch","tabsRef","useRef","useState","tabsWidth","setTabsWidth","useEffect","current","offsetWidth","wrapper","style","minWidth","filter","addSelectedUserInDialogListTc","prevAutor","currentAutor","Message","index","time","message_wrapper_left","message_wrapper","message_container_left","message_container","message_text","message_info","progress","message_progress_container","animationDuration","hidden_avatar","avatar","date","locale","ru","MessageBoard","messagesEndRef","scrollIntoView","behavior","block","selectedCommunication","forEach","localStorage","getItem","sendDate","removeItem","check–°ompletedMsg","message_list","currentDate","dayTime","format","Date","split","NewMessageField","addProgressMessage","currentValue","setCurrentValue","sendMessage","result","autorName","to","now","setItem","JSON","stringify","newMessageDataCreator","sendNewMessageTc","TextareaAutosize","textarea","e","target","onKeyPress","key","preventDefault","Fab","ChatPage","currentUser","userData","setUserData","dialog_container","buttons_container","button_arrows","Object","keys","progressItem","parse","String","UserFields","values","handleChange","handleClickShowPassword","showPassword","password","blurValue","setBlurValue","handleBlur","prop","nameError","passwordError","TextField","required","onBlur","m","disabled","helperText","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","onMouseDown","handleMouseDownPassword","FormHelperText","LoginPage","setValues","entrance","setEntrance","setShowPassword","handleClickLogin","socketId","handleClickSignIn","flexDirection","LoadingButton","endIcon","loading","loadingPosition","MainPage","errorMessage","App","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,iC,oBCArED,EAAOC,QAAU,CAAC,QAAU,qC,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,QAAU,+B,oBCApHD,EAAOC,QAAU,CAAC,QAAU,6B,uLCcbC,E,OAVEC,EAAMC,OAAO,CAC5BC,QAJe,0CAMfC,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,ICMJC,EAdU,CAEjBC,WAFiB,SAENC,GAAkB,OAAD,6HAEjBR,EACVS,IADU,4BACeD,IACzBE,MAAK,SAACC,GAAD,OAASA,EAAIC,QAJS,mKCsBrBC,EAvBC,CAERC,MAFQ,SAEFF,GAAqB,OAAD,6HAEfZ,EACVe,KAAK,SAAUH,GACfF,MAAK,SAACC,GAAD,OAASA,EAAIC,QAJO,kKAU1BI,SAZQ,SAYCJ,GAAqB,OAAD,6HAElBZ,EACVe,KAAK,YAAaH,GAClBF,MAAK,SAACC,GAAD,OAASA,EAAIC,QAJU,mKCN/BK,EAAiC,CACnCC,SAAU,KACVC,WAAW,EACXC,MAAO,KACPC,gBAAgB,GAyBPC,EACI,SAACC,GAAD,MAAmB,CAAEC,KAAM,gBAAiBD,YADhDD,EAEC,SAACC,GAAD,MAAmB,CAAEC,KAAM,YAAaD,YAFzCD,EAGS,SAACC,GAAD,MAAmB,CAAEC,KAAM,qBAAsBD,YAH1DD,EAIW,SAACC,GAAD,MAAmB,CAAEC,KAAM,uBAAwBD,YA+B9DE,EAA2B,SAACC,GAAD,OAAgC,SAACC,GACrEA,EAASL,EAA2BI,MAKzBE,EA/DK,WAAkE,IAAjEC,EAAgE,uDAAxDZ,EAAca,EAA0C,uCACjF,OAAQA,EAAON,MAEX,IAAK,gBACD,OAAO,2BAAKK,GAAZ,IAAmBX,SAAUY,EAAOP,UAExC,IAAK,YACD,OAAO,2BAAKM,GAAZ,IAAmBT,MAAOU,EAAOP,UAErC,IAAK,qBACD,OAAO,2BAAKM,GAAZ,IAAmBV,UAAWW,EAAOP,UAEzC,IAAK,uBACD,OAAO,2BAAKM,GAAZ,IAAmBR,eAAgBS,EAAOP,UAG9C,QACI,OAAOM,I,SCxBJE,EAFAC,YALE,qCAKM,CAAEC,WAAY,CAAC,YAAa,UAAW,iBCH1DC,EAAW,KACFC,EACI,SAACR,GACVO,EAAMP,GAIdI,EAAOK,GAAG,eAAe,SAACC,GACtBH,EAAII,EAAaD,OAGrBN,EAAOK,GAAG,cAAc,SAACG,GACrBC,QAAQC,IAAIF,GACZL,EAAIQ,EAAqBH,OAE7BR,EAAOK,GAAG,0BAA0B,SAACC,GACjCH,EAAII,EAAaD,OClBrB,IAeeM,EAfI,CAEfC,eAFe,SAEAC,GACXd,EAAOe,KAAK,cAAeD,IAG/BE,eANe,SAMAvC,GACXuB,EAAOe,KAAK,wBAAyBtC,IAEzCwC,wBATe,SASSC,EAAgBC,GACpCnB,EAAOe,KAAK,sBAAuB,CAACG,SAAQC,eCC9CjC,EAAiC,CACnCkC,YAAa,GACbC,aAAc,GACdC,aAAc,KACdC,iBAAkB,GAClBnC,WAAW,GA2BFG,EAEQ,SAACC,GAAD,MAA0B,CAAEC,KAAM,mBAAoBD,YAF9DD,EAGQ,SAACC,GAAD,MAA0B,CAAEC,KAAM,oBAAqBD,YAH/DD,EAII,SAACC,GAAD,MAAmB,CAAEC,KAAM,gBAAiBD,YAJhDD,EAKM,SAACC,GAAD,MAAmB,CAAEC,KAAM,kBAAmBD,YALpDD,EAMS,SAACC,GAAD,MAAmB,CAAEC,KAAM,qBAAsBD,YAU1DgC,EAAoB,SAACC,GAAD,OAAkC,SAAC7B,GAChEA,EAASL,EAAwBkC,MAMxBlB,EAAe,SAAC9B,GAAD,OAAgC,SAACmB,GAEzDrB,EAAiBC,WAAWC,GAASE,MAAK,SAACC,GAChB,MAAnBA,EAAI8C,WACJjB,QAAQC,IAAI9B,IAEZgC,EAAWI,eAAevC,GAC1BmB,EAASL,EAAoBX,EAAIC,KAAK8C,WAClC/C,EAAIC,KAAK+C,UACThC,EAASL,EAAwBX,EAAIC,KAAK+C,UAC1ChC,EAASL,GAAyB,WAenCsC,EAxEc,WAAkE,IAAjE/B,EAAgE,uDAAxDZ,EAAca,EAA0C,uCAC1F,OAAQA,EAAON,MAEX,IAAK,mBACD,OAAO,2BAAKK,GAAZ,IAAmBsB,YAAY,YAAKrB,EAAOP,WAE/C,IAAK,qBACD,OAAO,2BAAKM,GAAZ,IAAmBV,UAAWW,EAAOP,UAEzC,IAAK,oBACD,OAAO,2BAAKM,GAAZ,IAAmBwB,aAAcvB,EAAOP,UAE5C,IAAK,gBACD,OAAO,2BAAKM,GAAZ,IAAmBuB,aAAa,YAAKtB,EAAOP,WAEhD,IAAK,kBACD,OAAO,2BAAKM,GAAZ,IAAmBsB,YAAY,GAAD,mBAAMtB,EAAMsB,aAAZ,CAAyBrB,EAAOP,YAElE,QACI,OAAOM,ICrCNgC,EAAc,SAAChC,GAAD,OAAyBA,EAAMD,YAAYV,UACzD4C,EAAmB,SAACjC,GAAD,OAAyBA,EAAMD,YAAYT,WAC9D4C,EAAkB,SAAClC,GAAD,OAAyBA,EAAMD,YAAYR,OAC7D4C,EAAoB,SAACnC,GAAD,OAAyBA,EAAMD,YAAYP,gBAC/D4C,EAAkB,SAACpC,GAAD,OAAyBA,EAAM+B,qBAAqBR,cACtEc,EAAiB,SAACrC,GAAD,OAAyBA,EAAM+B,qBAAqBT,aACrEgB,EAAkB,SAACtC,GAAD,OAAyBA,EAAM+B,qBAAqBP,cACtEe,EAAc,SAACvC,GAAD,uBAAyBA,EAAM+B,4BAA/B,aAAyB,EAA4BP,cAEnEgB,EAAsB,SAACxC,GAAD,OAAyBA,EAAM+B,qBAAqBzC,W,0CCPjFmD,GAAQC,cAA6C,SACvDC,EACAC,GAEA,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAGnD,SAASI,GAAYJ,GAChC,IAAQK,EAASL,EAATK,KACR,EAAwBN,YAAe,GAAvC,mBAAOO,EAAP,KAAaC,EAAb,KAGAR,aAAgB,WACZQ,GAAQ,KACT,CAACF,IAEJ,IAAMG,EAAc,SAACC,EAAsCC,GACxC,cAAXA,GAGJH,GAAQ,IAGZ,OACI,cAACI,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,MAAO,QAAhC,SACI,cAACC,EAAA,EAAD,CAAUT,KAAMA,EAAMU,iBAAkB,IAAMC,QAAST,EAAvD,SACI,cAAC,GAAD,CAAOS,QAAST,EAAaU,SAAS,QAAQL,GAAI,CAAEC,MAAO,QAA3D,SACKT,Q,qPCffc,GAASC,aAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,qBACzBC,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,aAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACPJ,gBAAiBC,aAAML,EAAMM,QAAQC,OAAOC,MAAO,MAEvDC,YAAaT,EAAMT,QAAQ,GAC3BmB,WAAY,EACZjB,MAAO,QACNO,EAAMW,YAAYC,GAAG,MAAQ,CAC1BF,WAAYV,EAAMT,QAAQ,GAC1BE,MAAO,YAIToB,GAAoBd,aAAO,MAAPA,EAAc,kBAAgB,CACpDe,QADoC,EAAGd,MACxBT,QAAQ,EAAG,GAC1BwB,OAAQ,OACRd,SAAU,WACVe,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGdC,GAAkBrB,aAAOsB,KAAPtB,EAAkB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACtDsB,MAAO,UACP,wBAAwB,cACpBR,QAASd,EAAMT,QAAQ,EAAG,EAAG,EAAG,GAEhCgC,YAAY,cAAD,OAAgBvB,EAAMT,QAAQ,GAA9B,KACXiC,WAAYxB,EAAMyB,YAAYpH,OAAO,SACrCoF,MAAO,QACNO,EAAMW,YAAYC,GAAG,MAAQ,CAC1BnB,MAAO,aAuLJiC,GAlLA,WACX,MAAgChD,WAAmC,MAAnE,mBAAOiD,EAAP,KAAiBC,EAAjB,KACA,EACIlD,WAAmC,MADvC,mBAAOmD,EAAP,KAA2BC,EAA3B,KAGMC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAwB,SAAC9C,GAC3BwC,EAAYxC,EAAM+C,gBAGhBC,EAAwB,WAC1BN,EAAsB,OAGpBO,EAAkB,WACpBT,EAAY,MACZQ,KAOEE,EAAS,8BACTC,EACF,eAACC,GAAA,EAAD,CACIb,SAAUA,EACVc,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBnG,GAAI8F,EACJM,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhB1D,KAAM8C,EACNnC,QAASyC,EAbb,UAeI,cAACS,GAAA,EAAD,CAAUC,QAASV,EAAnB,qBACA,cAACS,GAAA,EAAD,CAAUC,QAASV,EAAnB,2BAIFW,EAAe,qCACfC,EACF,eAACT,GAAA,EAAD,CACIb,SAAUE,EACVY,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBnG,GAAIwG,EACJJ,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhB1D,KAAMgD,EACNrC,QAASwC,EAbb,UAeI,eAACU,GAAA,EAAD,WACI,cAACI,GAAA,EAAD,CAAYC,KAAK,QAAQ,aAAW,mBAAmB7B,MAAM,UAA7D,SACI,cAAC8B,GAAA,EAAD,CAAOC,aAAc,EAAG/B,MAAM,QAA9B,SACI,cAAC,KAAD,QAGR,4CAEJ,eAACwB,GAAA,EAAD,WACI,cAACI,GAAA,EAAD,CACIC,KAAK,QACL,aAAW,4BACX7B,MAAM,UAHV,SAKI,cAAC8B,GAAA,EAAD,CAAOC,aAAc,GAAI/B,MAAM,QAA/B,SACI,cAAC,KAAD,QAGR,iDAEJ,eAACwB,GAAA,EAAD,CAAUC,QAASb,EAAnB,UACI,cAACgB,GAAA,EAAD,CACIC,KAAK,QACL,aAAW,0BACX,gBAAc,8BACd,gBAAc,OACd7B,MAAM,UALV,SAOI,cAAC,KAAD,MAEJ,8CAKZ,OACI,eAACgC,GAAA,EAAD,CAAK9D,GAAI,CAAE+D,SAAU,GAArB,UACI,cAACC,GAAA,EAAD,CAAQvD,SAAS,SAAjB,SACI,eAACwD,GAAA,EAAD,WACI,cAACP,GAAA,EAAD,CACIC,KAAK,QACLO,KAAK,QACLpC,MAAM,UACN,aAAW,cACX9B,GAAI,CAAEmE,GAAI,GALd,SAOI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACI9E,QAAQ,KACR+E,QAAM,EACNC,UAAU,MACVtE,GAAI,CAAEyB,QAAS,CAAE8C,GAAI,OAAQC,GAAI,UAJrC,iBAQA,eAAC,GAAD,WACI,cAACnD,GAAD,UACI,cAAC,KAAD,MAEJ,cAACO,GAAD,CACI6C,YAAY,eACZC,WAAY,CAAE,aAAc,eAGpC,cAACZ,GAAA,EAAD,CAAK9D,GAAI,CAAE+D,SAAU,KACrB,eAACD,GAAA,EAAD,CAAK9D,GAAI,CAAEyB,QAAS,CAAE8C,GAAI,OAAQI,GAAI,SAAtC,UACI,cAACjB,GAAA,EAAD,CAAYC,KAAK,QAAQ,aAAW,mBAAmB7B,MAAM,UAA7D,SACI,cAAC8B,GAAA,EAAD,CAAOC,aAAc,EAAG/B,MAAM,QAA9B,SACI,cAAC,KAAD,QAGR,cAAC4B,GAAA,EAAD,CACIC,KAAK,QACL,aAAW,4BACX7B,MAAM,UAHV,SAKI,cAAC8B,GAAA,EAAD,CAAOC,aAAc,EAAG/B,MAAM,QAA9B,SACI,cAAC,KAAD,QAGR,cAAC4B,GAAA,EAAD,CACIC,KAAK,QACLO,KAAK,MACL,aAAW,0BACX,gBAAepB,EACf,gBAAc,OACdS,QAASb,EACTZ,MAAM,UAPV,SASI,cAAC,KAAD,SAGR,cAACgC,GAAA,EAAD,CAAK9D,GAAI,CAAEyB,QAAS,CAAE8C,GAAI,OAAQI,GAAI,SAAtC,SACI,cAACjB,GAAA,EAAD,CACIC,KAAK,QACL,aAAW,YACX,gBAAeH,EACf,gBAAc,OACdD,QA9IK,SAAC3D,GAC1B0C,EAAsB1C,EAAM+C,gBA8IRb,MAAM,UANV,SAQI,cAAC,KAAD,aAKf2B,EACAV,M,qIClNE6B,GAfK,WAGhB,OACI,sBAAKC,UAAWC,KAAEC,aAAlB,UACI,cAAC,KAAD,CAAgBjD,MAAM,UAAUkD,SAAS,QACrCH,UAAWC,KAAEG,iBACjB,qBAAKJ,UAAWC,KAAEI,UAAlB,gmB,8BCMGC,GAdK,SAAChG,GAErB,IAAOiG,EAAcjG,EAAdiG,KAAMC,EAAQlG,EAARkG,EAAGC,EAAKnG,EAALmG,EACZ,OACI,8BACI,cAACC,GAAA,EAAD,CACIvF,GAAI,CAAEC,MAAOoF,EAAG9D,OAAQ+D,EAAGE,QAAS,UAAUC,OAAQ,OACtDC,IAAKN,EACLO,IAAI,mCCsBLC,GA3BE,SAACzG,GAEd,IAAQ0G,EAAqD1G,EAArD0G,KAAMC,EAA+C3G,EAA/C2G,SAAUC,EAAqC5G,EAArC4G,WAAYC,EAAyB7G,EAAzB6G,KAAMC,EAAmB9G,EAAnB8G,eAE1C,OACI,sBAAoBpB,UAAWiB,IAAaD,EAAKK,IAAMpB,KAAEqB,oBAAsBrB,KAAEsB,aAC7E7C,QAAS,kBAAMwC,EAAWF,IAD9B,UAEI,sBAAKhB,UAAWC,KAAEuB,UAAlB,UACI,cAAC,GAAD,CAAajB,KAAMS,EAAKT,KAAMC,EAAG,GAAIC,EAAG,KACxC,sBAAKT,UAAWC,KAAEwB,UAAlB,UACI,cAAClC,GAAA,EAAD,CAAYC,QAAM,EAACrE,GAAI,CAAEgF,SAAU,QAAnC,SAA+Ca,EAAKT,OACnDS,EAAKU,UAAYV,EAAKU,SAASC,OAAS,GAAKP,EACxC,cAAC7B,GAAA,EAAD,CAAYS,UAAWC,KAAE2B,cAAepC,QAAQ,EAAMrE,GAAI,CAAEgF,SAAU,QAAtE,SACGa,EAAKU,SAASV,EAAKU,SAASC,OAAS,GAAGE,cAE3C,SAGd,qBAAK7B,UAAWC,KAAE6B,kBAAlB,SACI,cAAC/C,GAAA,EAAD,CAAO9B,MAAM,UAAU+B,aAAcgC,EAAKe,iBAA1C,SACI,cAACZ,EAAD,CAAMlE,MAAM,UAAUkD,SAAS,iBAfjCa,EAAKK,MCiBRW,GAvBD,SAAC1H,GACX,IAAQ2H,EAA+C3H,EAA/C2H,SAAUf,EAAqC5G,EAArC4G,WAAYC,EAAyB7G,EAAzB6G,KAAMC,EAAmB9G,EAAnB8G,eAC9BH,EAAWiB,YAAYhI,GAE7B,OACI,8BACK+H,GAAYA,EAASE,KAAI,SAACnB,GACvB,OACI,cAAC,GAAD,CAEIA,KAAMA,EACNC,SAAUA,EACVC,WAAYA,EACZC,KAAMA,EACNC,eAAgBA,GALXJ,EAAKK,WCCnB,SAASe,GAAK9H,GAE3B,IAAQ+H,EAAyD/H,EAAzD+H,WAAYnJ,EAA6CoB,EAA7CpB,aAAcoJ,EAA+BhI,EAA/BgI,gBAAiBrL,EAAcqD,EAAdrD,UAGnD,EAA0BoD,WAAe,KAAzC,mBAAOf,EAAP,KAAciJ,EAAd,KAOMrB,EAAa,SAACsB,GAClBD,EAAS,KACTD,EAAgBE,IAKlB,OACE,cAACvD,GAAA,EAAD,CAAK9D,GAAI,CAAEC,MAAO,OAAQqH,WAAY,SAAtC,SACE,eAACC,GAAA,EAAD,CAAYpJ,MAAOA,EAAnB,UACE,cAAC2F,GAAA,EAAD,CAAK9D,GAAI,CAAEwH,aAAc,EAAGC,YAAa,WAAzC,SACE,eAACC,GAAA,EAAD,CAASC,SAhBI,SAAC/H,EAA6BgI,GACjDR,EAASQ,GACTT,EAAgB,OAcuB,aAAW,uBAA5C,UACE,cAACU,GAAA,EAAD,CAAK7H,GAAI,CAAEC,MAAO,OAAS6H,MAAM,iBAAiB3J,MAAM,MACxD,cAAC0J,GAAA,EAAD,CAAK7H,GAAI,CAAEC,MAAO,OAAS6H,MAAM,YAAY3J,MAAM,WAGvD,cAAC4J,GAAA,EAAD,CAAU/H,GAAI,CAAEsB,QAAS,OAASnD,MAAM,IAAxC,SACG+I,GAAcA,EAAWV,OAAS,EAC/B,cAAC,GAAD,CACAT,WAAYA,EACZe,SAAUI,EACVlB,KAAMgC,KACN/B,gBAAgB,IAEhBiB,GAAcpL,EACd,cAACmM,GAAA,EAAD,CAAkBjI,GAAI,CAAES,SAAU,WAAYyH,KAAM,MAAOC,OAAQ,SACjE,cAAC,GAAD,MAGR,cAACJ,GAAA,EAAD,CAAU/H,GAAI,CAAEsB,QAAS,OAASnD,MAAM,IAAxC,SACE,cAAC,GAAD,CACE4H,WAAYA,EACZe,SAAU/I,EACViI,KAAMoC,KACNnC,gBAAgB,W,yBCtBboC,GAhCI,SAAClJ,GAEhB,IAAM7C,EAAWgM,cACXxM,EAAYiL,YAAY/H,GACtBkI,EAA6C/H,EAA7C+H,WAAYnJ,EAAiCoB,EAAjCpB,aAAc/B,EAAmBmD,EAAnBnD,eAC5BuM,EAAUC,iBAAO,MACvB,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACND,EAAaJ,EAAQM,QAAQC,gBAgBjC,OACI,qBAAK1J,IAAKmJ,EAAS1D,UAAWC,KAAEiE,QAASC,MAAO,CAAE9H,WAAalF,EAAkB,MAAnB,WAA+B0M,EAA/B,MAA8CO,SAAU,OAAtH,SACI,cAAChC,GAAD,CAAME,gBAhBU,SAACE,GACjBA,GACgCH,EAAWgC,QAAO,SAACrD,GAAD,OAAUA,EAAKK,MAAQmB,EAAKnB,OAAKM,OAAS,GAIxFlK,ETwC6B,SAAC+K,GAAD,OAAiC,SAAC/K,GAC3EA,EAASL,EAAsBoL,KSzCV8B,CAA8B9B,IAFvC/K,EAAS4B,EAAkBmJ,EAAKnB,OAMpC5J,EAAS4B,EAAkB,QAMagJ,WAAYA,EAAYnJ,aAAcA,EAAcjC,UAAWA,O,yCC3B/GsN,GAAY,KACZC,GAAe,KAqCJC,GAnCC,SAAC,GAAwC,IAAtCtM,EAAqC,EAArCA,GAAIE,EAAiC,EAAjCA,QAASkI,EAAwB,EAAxBA,KAAMmE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAKzC,OAJc,IAAVD,IACAH,GAAYC,IAEhBA,GAAenM,EAAQ/B,QAEnB,sBAAK0J,UAAW3H,EAAQ/B,UAAY6B,EAAK8H,KAAE2E,qBAAuB3E,KAAE4E,gBAApE,UACI,sBAAK7E,UAAW3H,EAAQ/B,UAAY6B,EAAK8H,KAAE6E,uBAAyB7E,KAAE8E,kBAAtE,UACI,mBAAG/E,UAAWC,KAAE+E,aAAhB,SACK3M,EAAQwJ,cAEb,sBAAK7B,UAAWC,KAAEgF,aAAlB,WACM5M,EAAQ6M,UAAY,8BAAMP,IAC5B,qBAAK3E,UAAWC,KAAEkF,2BAAlB,SACI,cAAClK,EAAA,EAAD,UACK5C,EAAQ6M,SACH,cAAC9B,GAAA,EAAD,CACE3I,QAAQ,gBACRU,GAAI,CAAEiK,kBAAmB,QAASnI,MAAO,WACzC6B,KAAM,KAER,cAAC,KAAD,CAAU3D,GAAI,CAAEgF,SAAU,sBAMhD,qBAAKH,UAAW3H,EAAQ/B,UAAYiO,IAAuB,IAAVG,EAAczE,KAAEoF,cAAgBpF,KAAEqF,OAAnF,SACI,cAAC,GAAD,CAAa/E,KAAMA,EAAMC,EAAG,GAAIC,EAAG,W,+BCrCnD8E,KAAKC,OAAOC,MAEL,I,qBC6CQC,GAzCM,SAACpL,GAAW,IAAD,EACpBnB,EAA2BmB,EAA3BnB,aAAcnC,EAAasD,EAAbtD,SAChBS,EAAWgM,cACXkC,EAAiBhC,iBAAO,MAiB9B,OAfAI,qBAAU,WAAO,IAAD,EACZ,UAAA4B,EAAe3B,eAAf,SAAwB4B,eAAe,CAAEC,SAAU,OAAQC,MAAO,UACnE,WAAC3M,EAAauI,gBAAd,aAAC,EAAuBC,SAE3BoC,qBAAU,YDImB,SAACgC,GAA2B,IAAD,EACxD,UAAAA,EAAsBrE,gBAAtB,SAAgCsE,SAAQ,SAAChF,GAEd,OADAiF,aAAaC,QAAQlF,EAAKmF,WAE7CF,aAAaG,WAAWpF,EAAKmF,aCPjCE,CAAkBlN,KACnB,CAACA,IAEJ4K,qBAAU,WZqC2B,IAAChL,EAAgBC,EYpC9CG,EAAa4I,iBAAmB,GAChCtK,GZmC8BsB,EYnCK/B,EAASqK,IZmCErI,EYnCGG,EAAaH,SZmCgB,SAACvB,GACvFgB,EAAWK,wBAAwBC,EAAQC,QYlCxC,CAAChC,EAASqK,IAAK5J,EAAU0B,IAIxB,sBAAK6G,UAAWC,KAAEqG,aAAlB,UACKnN,EAAauI,UAAYvI,EAAauI,SAASS,KAAI,SAAC9J,EAASqM,GAC1D,IDZW6B,ECYLC,GDZKD,ECYgBlO,EAAQkN,KDZRA,KAAKkB,OAAO,IAAIC,KAAKH,GAAc,eAAeI,MAAM,MCcnF,OACI,cAAC,GAAD,CAEIpG,KAAMpH,EAAaoH,KACnBpI,GAAIgB,EAAakI,IACjBhJ,QAASA,EACTqM,MAAOA,EACPC,KAAM6B,EAAQ,IALTnO,EAAQgJ,IAAMhJ,EAAQkN,SASvC,qBAAKhL,IAAKoL,Q,4HC7BP,SAASiB,GAAT,GAA0E,IAAhDC,EAA+C,EAA/CA,mBAAoBxF,EAA2B,EAA3BA,IAAKd,EAAsB,EAAtBA,KAAMpH,EAAgB,EAAhBA,aAC9D1B,EAAWgM,cACjB,EAAwCG,mBAAS,IAAjD,mBAAOkD,EAAP,KAAqBC,EAArB,KAEMC,EAAc,WAChB,IAAMrO,EFhBuB,SAAC,GAA+C,IAA7CmO,EAA4C,EAA5CA,aAAczF,EAA8B,EAA9BA,IAAKd,EAAyB,EAAzBA,KAAMpH,EAAmB,EAAnBA,aACvD8N,EAAS,CACXpF,YAAaiF,EACbxQ,QAAS+K,EACT6F,UAAW3G,EACX4G,GAAIhO,EAAakI,IACjBrI,SAAUG,EAAaH,SACvBmN,SAAUO,KAAKU,MACflC,UAAU,GAId,OAFAe,aAAaoB,QAAQJ,EAAOd,SAAUmB,KAAKC,UAAU,CAAE/E,KAAMrJ,EAAakI,IAAKhJ,QAAS4O,KAEjFA,EEIiBO,CAAsB,CAAEV,eAAczF,MAAKd,OAAMpH,iBAErE0N,IAEApP,Eb+BwB,SAACkB,GAAD,OAA4C,SAAClB,GACzEgB,EAAWC,eAAeC,IahCb8O,CAAiB9O,IAE1BoO,EAAgB,KAmBpB,OACI,eAAC9H,GAAA,EAAD,CAAKe,UAAWC,KAAEiE,QAAlB,UACI,cAACwD,GAAA,EAAD,CACI1H,UAAWC,KAAE0H,SACb/H,YAAY,2FACZkD,SApBS,SAAC8E,GAClBb,EAAgBa,EAAEC,OAAOvO,QAoBjBwO,WAjBW,SAACF,GACN,UAAVA,EAAEG,MACFH,EAAEI,iBACFhB,MAeI1N,MAAOwN,IAEX,cAACmB,GAAA,EAAD,CAAKvJ,QAbO,WAChBsI,KAY+BlI,KAAK,SAAS7B,MAAM,UAA/C,SACI,cAAC,KAAD,SCzChB,IAoFeiL,GApFE,WACf,IAAMzQ,EAAWgM,cACXpB,EAAaH,YAAYlI,GACzBd,EAAegJ,YAAYnI,GAC3BoO,EAAcjG,YAAYjI,GAC1BjD,EAAWkL,YAAYvI,GACvBxC,EAAiB+K,YAAYpI,GAE7BX,EAAegP,GAAe9F,EAAaA,EAAWgC,QAAO,SAAArD,GAAI,OAAIA,EAAKK,MAAQ8G,KAAa,GAAK,KAClG9G,EAAcrK,EAAdqK,IAAKd,EAASvJ,EAATuJ,KAGb,EAAgCqD,mBAASzK,GAAzC,mBAAOiP,EAAP,KAAiBC,EAAjB,KAGAtE,qBAAU,WACRsE,EAAYlP,KACX,CAACA,IAEJ4K,qBAAU,WACJ/M,EAASqK,KACX5J,EAASW,EAAapB,EAASqK,QAEhC,IA0BH,OACE,sBAAKrB,UAAWC,KAAEiE,QAAlB,UACE,cAAC,GAAD,CACE/M,eAAgBA,EAChBkL,WAAYA,EACZnJ,aAAcA,IAEfkP,GACC,sBAAKpI,UAAWC,KAAEqI,iBAAlB,UACE,sBAAKtI,UAAWC,KAAEsI,kBAAlB,UACE,qBAAKvI,UAAWC,KAAEuI,cAAlB,SACE,cAAC3J,GAAA,EAAD,CAAYH,QAAS,WA9B/BjH,EAASF,GAA4C,IAAnBJ,KA8BxB,SACE,cAAC,KAAD,CAAmB8F,MAAM,UAAUkD,SAAS,cAGhD,cAACtB,GAAA,EAAD,CAAYH,QAAS,kBAtC7BjH,EAAS4B,EAAkB,YAC3B5B,EAASF,GAAyB,KAqC1B,SACE,cAAC,KAAD,CAAY0F,MAAM,UAAUkD,SAAS,eAGzC,cAAC,GAAD,CACEhH,aAAciP,EACdpR,SAAUA,IAEZ,cAAC4P,GAAD,CACEvF,IAAKA,EACLd,KAAMA,EACNpH,aAAciP,EACdvB,mBA3CiB,WAGzB,IAFA,IAEA,MAFW4B,OAAOC,KAAKzC,cAEvB,eAAsB,CAAjB,IAAI8B,EAAG,KACJY,EAAerB,KAAKsB,MAAMC,OAAO5C,aAAaC,QAAQ6B,KACxDY,EAAanG,OAAS4F,EAAS/G,MAC7B+G,EAAS1G,SACX2G,EAAY,2BAAKD,GAAN,IAAgB1G,SAAS,GAAD,mBAAM0G,EAAS1G,UAAf,CAAyBiH,EAAatQ,aAEzEgQ,EAAY,2BAAKD,GAAN,IAAgB1G,SAAU,CAACiH,EAAatQ,wB,0JCkC9CyQ,GAlEI,SAACxO,GAChB,IACIyO,EAEAzO,EAFAyO,OAAQ9R,EAERqD,EAFQrD,UAAW+R,EAEnB1O,EAFmB0O,aACnBC,EACA3O,EADA2O,wBAAyBC,EACzB5O,EADyB4O,aAQ7B,EAAkC7O,IAAMuJ,SACpC,CAAErD,MAAM,EAAO4I,UAAU,IAD7B,mBAAOC,EAAP,KAAkBC,EAAlB,KAIMC,EAAa,SAAChQ,EAAgBiQ,GAGhCF,EAAa,2BAAKD,GAAN,mBAAkBG,EAAOjQ,MAGnCkQ,EAAaT,EAAOxI,KAAKoB,QAAU,GAAMyH,EAAU7I,KACnDkJ,EAAiBV,EAAOI,SAASxH,QAAU,GAAMyH,EAAUD,SAEjE,OACI,qCACI,cAAClK,GAAA,EAAD,UACI,cAACyK,GAAA,EAAD,CACIC,UAAQ,EACRzS,MAAOsS,EACPI,OAAQ,SAAChC,GAAD,OAAO0B,EAAW1B,EAAEC,OAAOvO,MAAMqI,QAAU,EAAG,SACtDsB,MAAO,OACP3J,MAAOyP,EAAOxI,KACdpF,GAAI,CAAE0O,EAAG,EAAGzO,MAAO,QACnB0O,SAAU7S,EACV6L,SAAUkG,EAAa,QACvBe,WC3DM,yCD8Dd,cAAC9K,GAAA,EAAD,UACI,eAAC+K,GAAA,EAAD,CAAa7O,GAAI,CAAE0O,EAAG,EAAGzO,MAAO,QAAUlE,MAAOuS,EAAjD,UACI,cAACQ,GAAA,EAAD,CAAYN,UAAQ,EAApB,SAAsB,aACtB,cAACO,GAAA,EAAD,CACIN,OAAQ,SAAChC,GAAD,OAAO0B,EAAW1B,EAAEC,OAAOvO,MAAMqI,QAAU,EAAG,aACtDrK,KAAM4R,EAAe,OAAS,WAC9B5P,MAAOyP,EAAOI,SACdW,SAAU7S,EACV6L,SAAUkG,EAAa,YACvBmB,aACI,cAACC,GAAA,EAAD,CAAgBxO,SAAS,MAAzB,SACI,cAACiD,GAAA,EAAD,CACIH,QAAS,kBAAMuK,KACfoB,YAAa,SAACtP,GAAD,OA9Cb,SAACA,GAC7BA,EAAMiN,iBA6C8CsC,CAAwBvP,IAChDsE,KAAK,MAHT,SAKK6J,EAAe,cAAC,KAAD,IAAoB,cAAC,KAAD,QAGhDjG,MAAM,aACV,cAACsH,GAAA,EAAD,UCjFU,oDCqGfC,GAvFG,WACd,IAAMvT,EAAYiL,YAAYtI,GACxBnC,EAAWgM,cACjB,EAA4BpJ,IAAMuJ,SAC9B,CAAErD,KAAM,GAAI4I,SAAU,KAD1B,mBAAOJ,EAAP,KAAe0B,EAAf,KAGA,EAAgCpQ,IAAMuJ,SAAiB,IAAvD,mBAAO8G,EAAP,KAAiBC,EAAjB,KACA,EAAwCtQ,IAAMuJ,UAAkB,GAAhE,mBAAOsF,EAAP,KAAqB0B,EAArB,KAGA,SAASC,EAAiBvT,GrBoBH,IAACZ,EqBnBhBmB,EAAOM,KACPwS,EAAYrT,GACZG,GrBiBgBf,EqBjBK,CACjB6J,KAAMwI,EAAOxI,KACb4I,SAAUJ,EAAOI,SACjB2B,SAAUjT,EAAOM,IrBc6B,SAACV,GAC3DA,EAASL,GAAyB,IAClCK,EAASL,EAAiB,OAC1BT,EAAQC,MAAMF,GAAMF,MAAK,SAACC,GACC,MAAnBA,EAAI8C,WACJ9B,EAASL,EAAiBX,EAAI4B,UAE9BZ,EAASL,EAAoBX,EAAI+L,OAErC/K,EAASL,GAAyB,WqBnBtC,SAAS2T,EAAkBzT,GrBsBD,IAACZ,EqBrBvBiU,EAAYrT,GACZG,GrBoBuBf,EqBpBC,CACpB6J,KAAMwI,EAAOxI,KACb4I,SAAUJ,EAAOI,SACjB2B,SAAUjT,EAAOM,IrBiBoC,SAACV,GAC9DA,EAASL,GAAyB,IAClCK,EAASL,EAAiB,OAC1BT,EAAQG,SAASJ,GAAMF,MAAK,SAACC,GACF,MAAnBA,EAAI8C,WAEJ9B,EAASL,EAAiBX,EAAI4B,UAE9BZ,EAASL,EAAoBX,EAAI+L,OAErC/K,EAASL,GAAyB,UqBvBtC,IASM0S,EAAYf,EAAOxI,KAAKoB,QAAU,GAAKoH,EAAOI,SAASxH,QAAU,EAEvE,OAEI,eAAC1C,GAAA,EAAD,CAAK9D,GAAI,CAAEuB,OAAQ,OAAQE,QAAS,OAAQoO,cAAe,SAAUlO,eAAgB,SAAUD,WAAY,UAA3G,UACI,cAAC,GAAD,CACIkM,OAAQA,EACR9R,UAAWA,EACXiS,aAAcA,EACdF,aAjBR,SAACO,GAAD,OAA8B,SAACxO,GAC3B0P,EAAU,2BAAK1B,GAAN,mBAAeQ,EAAOxO,EAAM8M,OAAOvO,WAiBxC2P,wBAAyB,WAbjC2B,GAAiB1B,IAcTY,SAAUA,KAGI,KAAbY,GAAgC,UAAbA,IAAyBzT,IAE7C,cAACgU,GAAA,EAAD,CACI9P,GAAI,CAAE0O,EAAG,QACTnL,QAAS,kBAAMmM,EAAiB,UAChCK,QAAS,cAAC,KAAD,IACTC,QAASlU,EACTmU,gBAAgB,MAChB3Q,QAAQ,YACRqP,SAAUA,EAPd,oBAac,KAAbY,GAAgC,aAAbA,IAA4BzT,IAEhD,cAACgU,GAAA,EAAD,CACInB,SAAUA,EACV3O,GAAI,CAAE0O,EAAG,QACTnL,QAAS,WAAQqM,EAAkB,aACnCG,QAAS,cAAC,KAAD,IACTC,QAASlU,EACTmU,gBAAgB,MAChB3Q,QAAQ,YACRwC,MAAM,UARV,0B,qBCvDDoO,GAlBE,WACf,IAAMrU,EAAWkL,YAAYvI,GACvB2R,EAAepJ,YAAYrI,GAC3BpC,EAAWgM,cAMjB,OAJAM,qBAAU,WACRtM,GlBqE6C,SAACA,GAC9CQ,EAAyBR,QkBrExB,IAGD,sBAAKuI,UAAWC,KAAEiE,QAAlB,UACGoH,GAAgB,cAAC5Q,GAAD,CAAaC,KAAM2Q,IACnCtU,GAAY,cAAC,GAAD,IACZA,EAAW,cAAC,GAAD,IAAe,cAAC,GAAD,QCTlBuU,GAZH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAI/L,UAAW4L,KAC3B,cAAC,IAAD,CAAOG,KAAK,IAAIC,OAAQ,kBAAM,cAAC,IAAD,CAAUtE,GAAG,e,mBCHtCuE,GAAWC,aAAgB,CACtCjU,cACAgC,yBAIIkS,GAAQC,aAAYH,GAAUI,aAAgBC,OAEpDC,OAAOJ,MAAQA,GAEAA,UCTfK,IAASR,OAEP,cAAC,IAAD,CAAUG,MAAOA,GAAjB,SACE,cAAC,GAAD,MAGFM,SAASC,eAAe,U,mBCZ1BvW,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,qBAAuB,sCAAsC,OAAS,wBAAwB,kBAAoB,mCAAmC,uBAAyB,wCAAwC,aAAe,8BAA8B,aAAe,8BAA8B,2BAA6B,4CAA4C,cAAgB,iC,mBCA9cD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,oBAAsB,uCAAuC,UAAY,6BAA6B,UAAY,6BAA6B,cAAgB,iCAAiC,UAAY,6BAA6B,kBAAoB,uC,mBCA9TD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,iBAAmB,oCAAoC,kBAAoB,qCAAqC,cAAgB,mC,mBCAvLD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,UAAY,yBAAyB,eAAiB,8BAA8B,OAAS,yB","file":"static/js/main.f883b8d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageField_wrapper__1t9Uh\",\"textarea\":\"messageField_textarea__2OUZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"communicationList_wrapper__2MIGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageBord_wrapper__1nw_z\",\"message_list\":\"messageBord_message_list__7wIT-\",\"buttons\":\"messageBord_buttons__3vBox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main-page_wrapper__3G1B_\"};","import Axios from 'axios';\n\nconst baseProd = 'https://no-name-chat.herokuapp.com/api/';\nconst baseDev = 'http://localhost:3001/api/'\n\nconst instance = Axios.create({\n  baseURL: process.env.NODE_ENV === \"development\" ? baseDev : baseProd,\n\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n\n});\n\nexport default instance;\n","\nimport instance from './api';\n\nconst CommunicationApi = {\n\n  async getComData(autorId: string) {\n    try {\n      return await instance\n        .get(`/com_data/?params=${autorId}`)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n};\n\nexport default CommunicationApi;\n\n\n\n","\nimport { AuthDataType } from '../types';\nimport instance from './api';\n\nconst MainApi = {\n\n  async login(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/login', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n  async register(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/register', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n};\n\nexport default MainApi;\n\n\n\n\n\n","import MainApi from '../../api/mainApi';\nimport { AuthDataType, BaseThunkType, InferActionsTypes } from '../../types';\n\ntype initialStateType = {\n    authData: any\n    isLoading: boolean\n    error: any\n    userListStatus: boolean\n}\n\nconst initialState: initialStateType = {\n    authData: null,\n    isLoading: false,\n    error: null,\n    userListStatus: true,\n};\n\nconst mainReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_AUTH_DATA': {\n            return { ...state, authData: action.payload };\n        }\n        case 'SET_ERROR': {\n            return { ...state, error: action.payload };\n        }\n        case 'SET_LOADING_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n        case 'SET_USER_LIST_STATUS': {\n            return { ...state, userListStatus: action.payload };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setAuthData: (payload: any) => ({ type: 'SET_AUTH_DATA', payload } as const),\n    setError: (payload: any) => ({ type: 'SET_ERROR', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADING_STATUS', payload } as const),\n    setUsersListStatus: (payload: any) => ({ type: 'SET_USER_LIST_STATUS', payload } as const),\n};\n\nexport const loginUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.login(data).then((res) => {\n        if (res.statusCode === 404) {\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\nexport const registerUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.register(data).then((res) => {\n        if (res.statusCode === 400) {\n\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\n\n\n\nexport const setShowUsersListStatusTc = (status: boolean): thunkType => (dispatch) => {\n    dispatch(actions.setUsersListStatus(status))\n}\n\n\n\nexport default mainReducer;\n\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>","import io from 'socket.io-client';\n\n\nconst baseProd = 'https://no-name-chat.herokuapp.com';\nconst baseDev = 'http://localhost:3001'\n\nconst env = (process.env.NODE_ENV === \"development\") ? baseDev : baseProd\n\nconst socket = io(env, { transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n","\nimport { actions as comActions, getComDataTc } from \"../redux/reducers/communicationReducer\";\nimport { actions as mainActions } from \"../redux/reducers/mainReducer\";\nimport socket from \"./socket\";\n\nlet dis: any = null\nexport const ResiveSocket = {\n    addDispatch: (dispatch: any) => {\n        dis = dispatch\n    }\n}\n\nsocket.on('new-message', (id) => {\n    dis(getComDataTc(id))\n})\n\nsocket.on('send-error', (message) => {\n    console.log(message);\n    dis(mainActions.setError(message))\n})\nsocket.on('update-messages-status', (id) => {\n    dis(getComDataTc(id))\n})","import { NewMessageData } from \"../types\";\nimport socket from \"./socket\";\n\nconst SendSocket = {\n\n    sendNewMessage(messageData: NewMessageData) {\n        socket.emit('new-message', messageData)\n    },\n\n    sendMySocketId(autorId: String) {\n        socket.emit('set_my_socketId_in_db', autorId)\n    },\n    updateNewMessagesStatus(userId: String, dialogId: string) {\n        socket.emit('new-messages-opened', {userId, dialogId})\n    },\n\n}\n\nexport default SendSocket;","import CommunicationApi from '../../api/CommunicationApi';\nimport { ResiveSocket } from '../../api/socketsResive';\nimport SendSocket from '../../api/socketsSend';\nimport { BaseThunkType, InferActionsTypes, DialogType, NewMessageData } from '../../types';\n\ntype initialStateType = {\n    dialogsList: Array<DialogType>\n    allUsersList: Array<any>\n    selectedUser: null | DialogType\n    progressMessages: Array<any>\n    isLoading: boolean\n\n}\n\nconst initialState: initialStateType = {\n    dialogsList: [],\n    allUsersList: [],\n    selectedUser: null,\n    progressMessages: [],\n    isLoading: true\n};\n\nconst communicationReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_DIALOGS_LIST': {\n            return { ...state, dialogsList: [...action.payload] };\n        }\n        case 'SET_LOADIND_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n        case 'SET_SELECTED_USER': {\n            return { ...state, selectedUser: action.payload };\n        }\n        case 'SET_ALL_USERS': {\n            return { ...state, allUsersList: [...action.payload] };\n        }\n        case 'ADD_DIALOG_USER': {\n            return { ...state, dialogsList: [...state.dialogsList, action.payload] };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setNewsMessage: (payload: string) => ({ type: 'SET_NEWS_MESSAGE', payload } as const),\n    setDialogsLists: (payload: Array<any>) => ({ type: 'SET_DIALOGS_LIST', payload } as const),\n    setSelectedUser: (payload: DialogType) => ({ type: 'SET_SELECTED_USER', payload } as const),\n    setAllUsers: (payload: any) => ({ type: 'SET_ALL_USERS', payload } as const),\n    addDialogUser: (payload: any) => ({ type: 'ADD_DIALOG_USER', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADIND_STATUS', payload } as const),\n};\n\nexport const sendNewMessageTc = (messageData: NewMessageData): thunkType => (dispatch) => {\n    SendSocket.sendNewMessage(messageData)\n};\nexport const updateNewMessagesStatusTc = (userId: string, dialogId: string): thunkType => (dispatch) => {\n    SendSocket.updateNewMessagesStatus(userId, dialogId)\n};\n\nexport const setSelectedUserTc = (value: DialogType): thunkType => (dispatch) => {\n    dispatch(actions.setSelectedUser(value))\n};\nexport const addSelectedUserInDialogListTc = (user: DialogType): thunkType => (dispatch) => {\n    dispatch(actions.addDialogUser(user))\n};\n\nexport const getComDataTc = (autorId: string): thunkType => (dispatch) => {\n\n    CommunicationApi.getComData(autorId).then((res) => {\n        if (res.statusCode !== 200) {\n            console.log(res)\n        } else {\n            SendSocket.sendMySocketId(autorId)\n            dispatch(actions.setAllUsers(res.data.allUsers))\n            if (res.data.comList) {\n                dispatch(actions.setDialogsLists(res.data.comList))\n                dispatch(actions.setLoadingStatus(false))\n            }\n        }\n    })\n}\n\n\n\nexport const startListeningTc = (): thunkType => (dispatch) => {\n    ResiveSocket.addDispatch(dispatch)\n};\n\n\n\n\nexport default communicationReducer;\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>\n\n\n","\n\nimport { appStateType } from \"./types\";\n\nexport const getAuthData = (state: appStateType) => state.mainReducer.authData;\nexport const getLoadingStatus = (state: appStateType) => state.mainReducer.isLoading;\nexport const getErrorMessage = (state: appStateType) => state.mainReducer.error;\nexport const getUserListStatus = (state: appStateType) => state.mainReducer.userListStatus;\nexport const getAllUsersList = (state: appStateType) => state.communicationReducer.allUsersList;\nexport const getDialogsList = (state: appStateType) => state.communicationReducer.dialogsList;\nexport const getSelectedUser = (state: appStateType) => state.communicationReducer.selectedUser;\nexport const getActiveId = (state: appStateType) => state.communicationReducer?.selectedUser;\nexport const getMsg = (state: appStateType) => state.communicationReducer.selectedUser?.messages;\nexport const getDialogsIsLoading = (state: appStateType) => state.communicationReducer.isLoading;\n\n\n\n\n\n","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function CustomAlert(props: any) {\n    const { text } = props\n    const [open, setOpen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setOpen(true)\n    }, [text])\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <Stack spacing={2} sx={{ width: '100%' }}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                    {text}\n                </Alert>\n            </Snackbar>\n\n        </Stack>\n    );\n}\n\n\n\n\n","import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\nconst Header = () => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n        React.useState<null | HTMLElement>(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"error\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={17} color=\"error\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\n                    >\n                        MUI\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Search‚Ä¶\"\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={0} color=\"error\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={0} color=\"error\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </Box>\n                    <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n}\n\n\nexport default Header;","import React from 'react';\nimport s from './plugs.module.css'\nimport PanToolAltIcon from '@mui/icons-material/PanToolAlt';\n\n\nconst NoUsersPlug = () => {\n\n\n    return (\n        <div className={s.plug_wrapper}>\n            <PanToolAltIcon color='success' fontSize='large'\n                className={s.plug_hand_icon} />\n            <div className={s.plug_text}>\n                –£ –≤–∞—Å –µ—à–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.\n                –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∏ –≤—ã–±–∏—Ä–∏—Ç–µ –∫–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å.\n            </div>\n        </div>\n    );\n};\n\nexport default NoUsersPlug;\n\n\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\n\nconst AvatarPhoto = (props) => {\n\nconst {name, w, h} = props\n    return (\n        <div>\n            <Avatar\n                sx={{ width: w, height: h, bgcolor: '#1E90FF',zIndex: \"200\" }}\n                alt={name}\n                src=\"/static/images/avatar/1.jpg\"\n            />\n        </div>\n    );\n};\n\nexport default AvatarPhoto;\n","\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport s from './user-card.module.css';\nimport AvatarPhoto from '../avatar/Avatar';\n\nconst UserCard = (props) => {\n\n    const { item, activeId, openDialog, Icon, isShowLastMesg } = props\n\n    return (\n        <div key={item._id} className={activeId === item._id ? s.user_wrapper_active : s.user_wrapper}\n            onClick={() => openDialog(item)} >\n            <div className={s.user_info}>\n                <AvatarPhoto name={item.name} w={56} h={56} />\n                <div className={s.user_text}>\n                    <Typography noWrap sx={{ fontSize: \"14px\" }} >{item.name}</Typography>\n                    {item.messages && item.messages.length > 0 && isShowLastMesg\n                        ? <Typography className={s.user_last_msg} noWrap={true} sx={{ fontSize: \"12px\" }} >\n                            {item.messages[item.messages.length - 1].messageText}\n                        </Typography>\n                        : ''}\n                </div>\n            </div>\n            <div className={s.new_message_count}>\n                <Badge color=\"success\" badgeContent={item.newMessagesCount}>\n                    <Icon color='primary' fontSize='medium' />\n                </Badge>\n            </div>\n        </div>\n    );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getActiveId } from '../../../selectors';\nimport UserCard from '../card/UserCard';\n\n\nconst Users = (props) => {\n    const { UserList, openDialog, Icon, isShowLastMesg } = props\n    const activeId = useSelector(getActiveId)\n\n    return (\n        <div>\n            {UserList && UserList.map((item) => {\n                return (\n                    <UserCard\n                        key={item._id}\n                        item={item}\n                        activeId={activeId}\n                        openDialog={openDialog}\n                        Icon={Icon}\n                        isShowLastMesg={isShowLastMesg}\n                    />\n                )\n            }\n            )}\n        </div>\n    );\n};\n\nexport default Users;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport TouchAppIcon from '@mui/icons-material/TouchApp';\n\n\n\nimport { DialogType } from '../../../types';\nimport { CircularProgress } from '@mui/material';\nimport NoUsersPlug from '../plugs/NoUsersPlug';\nimport Users from '../UsersLists/Users';\n\nexport default function Tabs(props: any) {\n\n  const { dialogList, allUsersList, setSelectedUser, isLoading } = props\n\n\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n    setSelectedUser(null)\n  };\n\n  const openDialog = (user: DialogType) => {\n    setValue('1')\n    setSelectedUser(user)\n  }\n\n\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab sx={{ width: '50%' }} label=\"your dialogues\" value=\"1\" />\n            <Tab sx={{ width: '50%' }} label=\"all users\" value=\"2\" />\n          </TabList>\n        </Box>\n        <TabPanel sx={{ padding: \"6px\" }} value=\"1\">\n          {dialogList && dialogList.length > 0\n            ? <Users\n              openDialog={openDialog}\n              UserList={dialogList}\n              Icon={MailOutlineIcon}\n              isShowLastMesg={true}\n            />\n            : dialogList && isLoading ?\n              <CircularProgress sx={{ position: 'absolute', left: '50%', bottom: '50%' }} />\n              : <NoUsersPlug />\n          }\n        </TabPanel>\n        <TabPanel sx={{ padding: \"6px\" }} value=\"2\">\n          <Users\n            openDialog={openDialog}\n            UserList={allUsersList}\n            Icon={TouchAppIcon}\n            isShowLastMesg={false}\n          />\n        </TabPanel>\n      </TabContext>\n    </Box >\n  );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedUserTc, addSelectedUserInDialogListTc } from '../../../redux/reducers/communicationReducer';\nimport { getDialogsIsLoading } from '../../../selectors';\nimport Tabs from '../tabs/Tabs';\nimport s from './communicationList.module.css';\n\n\nconst UsersLists = (props) => {\n\n    const dispatch = useDispatch()\n    const isLoading = useSelector(getDialogsIsLoading)\n    const { dialogList, allUsersList, userListStatus } = props\n    const tabsRef = useRef(null)\n    const [tabsWidth, setTabsWidth] = useState(null)\n\n    useEffect(() => {\n        setTabsWidth(tabsRef.current.offsetWidth)\n    });\n    const setSelectedUser = (user) => {\n        if (user) {\n            const includeUserInDialogList = dialogList.filter((item) => item._id === user._id).length > 0\n            if (includeUserInDialogList) {\n                dispatch(setSelectedUserTc(user._id))\n            } else {\n                dispatch(addSelectedUserInDialogListTc(user))\n                dispatch(setSelectedUserTc(user._id))\n            }\n        } else {\n            dispatch(setSelectedUserTc(null))\n        }\n    }\n\n    return (\n        <div ref={tabsRef} className={s.wrapper} style={{ marginLeft: (userListStatus) ? '8px' : `-${tabsWidth}px`, minWidth: '30%' }}>\n            <Tabs setSelectedUser={setSelectedUser} dialogList={dialogList} allUsersList={allUsersList} isLoading={isLoading} />\n        </div>\n    );\n};\n\nexport default UsersLists;\n","import React from 'react';\nimport s from './message.module.css';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DoneIcon from '@mui/icons-material/Done';\nimport AvatarPhoto from '../../avatar/Avatar';\n\n\nlet prevAutor = null\nlet currentAutor = null\n\nconst Message = ({ id, message, name, index, time }) => {\n    if (index !== 0) {\n        prevAutor = currentAutor\n    }\n    currentAutor = message.autorId\n    return (\n        <div className={message.autorId === id ? s.message_wrapper_left : s.message_wrapper}>\n            <div className={message.autorId === id ? s.message_container_left : s.message_container}>\n                <p className={s.message_text}>\n                    {message.messageText}\n                </p>\n                <div className={s.message_info}>\n                    {!message.progress && <div>{time}</div>}\n                    <div className={s.message_progress_container}>\n                        <Stack >\n                            {message.progress\n                                ? <CircularProgress\n                                    variant=\"indeterminate\"\n                                    sx={{ animationDuration: '300ms', color: '#389b3d' }}\n                                    size={10}\n                                />\n                                : <DoneIcon sx={{ fontSize: 'medium' }} />\n                            }\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n            <div className={message.autorId === prevAutor && index !== 0 ? s.hidden_avatar : s.avatar}>\n                <AvatarPhoto name={name} w={56} h={56} />\n            </div>\n\n        </div>\n    );\n};\n\nexport default Message;\n\n\n","import date from 'date-and-time';\nimport ru from 'date-and-time/locale/ru';\ndate.locale(ru);\n\nexport const newMessageDataCreator = ({ currentValue, _id, name, selectedUser }) => {\n    const result = {\n        messageText: currentValue,\n        autorId: _id,\n        autorName: name,\n        to: selectedUser._id,\n        dialogId: selectedUser.dialogId,\n        sendDate: Date.now(),\n        progress: true\n    }\n    localStorage.setItem(result.sendDate, JSON.stringify({ user: selectedUser._id, message: result }));\n\n    return result;\n}\n\nexport const formatDate = (currentDate) => date.format(new Date(currentDate), 'dddd, HH:mm').split(',');\n\nexport const check–°ompletedMsg = (selectedCommunication) => {\n    selectedCommunication.messages?.forEach((item) => {\n        const itemToprogress = localStorage.getItem(item.sendDate)\n        if (itemToprogress !== null) {\n            localStorage.removeItem(item.sendDate)\n        }\n    })\n}","import React, { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateNewMessagesStatusTc } from '../../../redux/reducers/communicationReducer';\nimport Message from './message/Message';\nimport { formatDate, check–°ompletedMsg } from './message_utils';\nimport s from './messageBord.module.css';\n\n\nconst MessageBoard = (props) => {\n    const { selectedUser, authData } = props\n    const dispatch = useDispatch()\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"auto\", block: \"end\" })\n    }, [selectedUser.messages?.length]);\n\n    useEffect(() => {\n        check–°ompletedMsg(selectedUser)\n    }, [selectedUser])\n\n    useEffect(() => {\n        if (selectedUser.newMessagesCount > 0) {\n            dispatch(updateNewMessagesStatusTc(authData._id, selectedUser.dialogId))\n        }\n    }, [authData._id, dispatch, selectedUser])\n\n\n    return (\n        <div className={s.message_list}>\n            {selectedUser.messages && selectedUser.messages.map((message, index) => {\n                const dayTime = formatDate(message.date)\n\n                return (\n                    <Message\n                        key={message._id + message.date}\n                        name={selectedUser.name}\n                        id={selectedUser._id}\n                        message={message}\n                        index={index}\n                        time={dayTime[1]} />\n                )\n            }\n            )}\n            <div ref={messagesEndRef} />\n        </div>\n    );\n};\n\nexport default MessageBoard;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Box from '@mui/material/Box';\nimport SendIcon from '@mui/icons-material/Send';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Fab from '@mui/material/Fab';\nimport { newMessageDataCreator } from '../../pagesComponents/messages/message_utils';\nimport { sendNewMessageTc } from '../../../redux/reducers/communicationReducer';\n\n\nimport s from './messageField.module.css'\n\n\n\nexport default function NewMessageField({addProgressMessage, _id, name, selectedUser }) {\n    const dispatch = useDispatch()\n    const [currentValue, setCurrentValue] = useState('')\n\n    const sendMessage = () => {\n        const messageData = newMessageDataCreator({ currentValue, _id, name, selectedUser })\n\n        addProgressMessage()\n\n        dispatch(sendNewMessageTc(messageData))\n        \n        setCurrentValue('')\n    }\n\n\n    const handleChange = (e) => {\n        setCurrentValue(e.target.value)\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            e.preventDefault()\n            sendMessage()\n        }\n    }\n\n    const handleClick = () => {\n        sendMessage()\n    }\n\n    return (\n        <Box className={s.wrapper} >\n            <TextareaAutosize\n                className={s.textarea}\n                placeholder=\"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...\"\n                onChange={handleChange}\n                onKeyPress={handleKeyPress}\n                value={currentValue}\n            />\n            <Fab onClick={handleClick} size=\"medium\" color=\"success\">\n                <SendIcon />\n            </Fab>\n        </Box>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getComDataTc, sendNewMessageTc, setSelectedUserTc } from '../../../redux/reducers/communicationReducer';\nimport { getDialogsList, getSelectedUser, getAuthData, getAllUsersList, getUserListStatus } from '../../../selectors';\nimport UsersLists from '../../pagesComponents/UsersLists/UsersLists';\nimport MessageBoard from '../../pagesComponents/messages/MessageBord';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport IconButton from '@mui/material/IconButton';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\nimport s from './chat-page.module.css';\nimport NewMessageField from '../../pagesComponents/messageField/NewMessageField';\nimport { setShowUsersListStatusTc } from '../../../redux/reducers/mainReducer';\n\n\nconst ChatPage = () => {\n  const dispatch = useDispatch()\n  const dialogList = useSelector(getDialogsList);\n  const allUsersList = useSelector(getAllUsersList);\n  const currentUser = useSelector(getSelectedUser);\n  const authData = useSelector(getAuthData);\n  const userListStatus = useSelector(getUserListStatus)\n\n  const selectedUser = currentUser && dialogList ? dialogList.filter(item => item._id === currentUser)[0] : null\n  const { _id, name } = authData\n\n\n  const [userData, setUserData] = useState(selectedUser)\n\n\n  useEffect(() => {\n    setUserData(selectedUser)\n  }, [selectedUser])\n\n  useEffect(() => {\n    if (authData._id) {\n      dispatch(getComDataTc(authData._id))\n    }\n  }, [])\n\n  const closeDialog = () => {\n    dispatch(setSelectedUserTc(null))\n    dispatch(setShowUsersListStatusTc(true))\n  }\n  const showUsersList = () => {\n    dispatch(setShowUsersListStatusTc(userListStatus !== true))\n  }\n\n  const addProgressMessage = () => {\n    let keys = Object.keys(localStorage)\n\n    for (let key of keys) {\n      const progressItem = JSON.parse(String(localStorage.getItem(key)))\n      if (progressItem.user === userData._id) {\n        if (userData.messages) {\n          setUserData({ ...userData, messages: [...userData.messages, progressItem.message] })\n        } else {\n          setUserData({ ...userData, messages: [progressItem.message] })\n        }\n      }\n    }\n  }\n\n\n  return (\n    <div className={s.wrapper}>\n      <UsersLists\n        userListStatus={userListStatus}\n        dialogList={dialogList}\n        allUsersList={allUsersList}\n      />\n      {userData &&\n        <div className={s.dialog_container}>\n          <div className={s.buttons_container}>\n            <div className={s.button_arrows}>\n              <IconButton onClick={() => showUsersList()}>\n                <CompareArrowsIcon color=\"success\" fontSize='large' />\n              </IconButton>\n            </div>\n            <IconButton onClick={() => closeDialog()}>\n              <CancelIcon color=\"warning\" fontSize='large' />\n            </IconButton>\n          </div>\n          <MessageBoard\n            selectedUser={userData}\n            authData={authData}\n          />\n          <NewMessageField\n            _id={_id}\n            name={name}\n            selectedUser={userData}\n            addProgressMessage={addProgressMessage}\n          />\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ChatPage;\n","import React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { NAME_ERROR, PASSWORD_ERROR } from '../../constants';\nimport { DataEnterType, EventType, UserDataType, MouseEventType, TouchedType } from '../../types';\n\n\ntype PropsType = {\n    values: DataEnterType,\n    isLoading: boolean\n    showPassword: boolean\n    handleChange: (prop: keyof UserDataType) => (event: EventType) => void\n    handleClickShowPassword: () => void\n    disabled: boolean\n}\n\nconst UserFields = (props: PropsType) => {\n    const {\n        values, isLoading, handleChange,\n        handleClickShowPassword, showPassword\n    } = props\n\n    const handleMouseDownPassword = (event: MouseEventType) => {\n        event.preventDefault();\n    };\n\n\n    const [blurValue, setBlurValue] = React.useState<TouchedType>(\n        { name: false, password: false }\n    );\n\n    const handleBlur = (value: boolean, prop: keyof TouchedType) => {\n\n\n        setBlurValue({ ...blurValue, [prop]: value });\n    }\n\n    const nameError = (values.name.length <= 2) && blurValue.name\n    const passwordError = (values.password.length <= 2) && blurValue.password\n\n    return (\n        <>\n            <Box>\n                <TextField\n                    required\n                    error={nameError}\n                    onBlur={(e) => handleBlur(e.target.value.length <= 2, 'name')}\n                    label={'Name'}\n                    value={values.name}\n                    sx={{ m: 1, width: '43ch' }}\n                    disabled={isLoading}\n                    onChange={handleChange('name')}\n                    helperText={NAME_ERROR}\n                />\n            </Box>\n            <Box>\n                <FormControl sx={{ m: 1, width: '43ch' }} error={passwordError} >\n                    <InputLabel required>{'Password'}</InputLabel>\n                    <OutlinedInput\n                        onBlur={(e) => handleBlur(e.target.value.length <= 2, 'password')}\n                        type={showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        disabled={isLoading}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={() => handleClickShowPassword()}\n                                    onMouseDown={(event) => handleMouseDownPassword(event)}\n                                    edge=\"end\"\n                                >\n                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>}\n                        label=\"Password\" />\n                    <FormHelperText >{PASSWORD_ERROR}</FormHelperText>\n                </FormControl>\n            </Box>\n        </>\n    )\n}\n\nexport default UserFields;\n","\nexport const NAME_ERROR = 'Name must be at least 3 characters'\nexport const PASSWORD_ERROR = 'Password must be at least 3 characters'\nexport const RESOLVE_ERROR = 'please check your internet connection and try again'\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { sendUserDataToEnterTc } from '../../redux/thuncks/mainThuncks';\nimport Box from '@mui/material/Box';\nimport LoginIcon from '@mui/icons-material/Login';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DataEnterType, EventType, UserDataType } from '../../../types';\nimport UserFields from '../../pagesComponents/UserFields';\nimport { getLoadingStatus } from '../../../selectors';\nimport socket from '../../../api/socket';\nimport { loginUserTc, registerUserTc } from '../../../redux/reducers/mainReducer';\n\n\nconst LoginPage = () => {\n    const isLoading = useSelector(getLoadingStatus)\n    const dispatch = useDispatch()\n    const [values, setValues] = React.useState<DataEnterType>(\n        { name: '', password: '' }\n    );\n    const [entrance, setEntrance] = React.useState<string>('');\n    const [showPassword, setShowPassword] = React.useState<boolean>(false);\n\n\n    function handleClickLogin(type: string) {\n        if (socket.id) {\n            setEntrance(type)\n            dispatch(loginUserTc({\n                name: values.name,\n                password: values.password,\n                socketId: socket.id,\n            }))\n        }\n    }\n    function handleClickSignIn(type: string) {\n        setEntrance(type)\n        dispatch(registerUserTc({\n            name: values.name,\n            password: values.password,\n            socketId: socket.id,\n        }))\n    }\n\n    const handleChange =\n        (prop: keyof UserDataType) => (event: EventType) => {\n            setValues({ ...values, [prop]: event.target.value })\n        };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const disabled = (values.name.length <= 2 || values.password.length <= 2)\n\n    return (\n\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <UserFields\n                values={values}\n                isLoading={isLoading}\n                showPassword={showPassword}\n                handleChange={handleChange}\n                handleClickShowPassword={() => handleClickShowPassword()}\n                disabled={disabled}\n            />\n            {\n                (entrance === '' || entrance === 'login' || !isLoading)\n                &&\n                <LoadingButton\n                    sx={{ m: \"10px\" }}\n                    onClick={() => handleClickLogin(\"login\")}\n                    endIcon={<LoginIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    disabled={disabled}\n                >\n                    Login\n                </LoadingButton>\n            }\n            {\n                (entrance === '' || entrance === 'register' || !isLoading)\n                &&\n                <LoadingButton\n                    disabled={disabled}\n                    sx={{ m: \"10px\" }}\n                    onClick={() => { handleClickSignIn(\"register\") }}\n                    endIcon={<EditIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    color=\"success\"\n                >\n                    REGISTER\n                </LoadingButton>\n            }\n        </Box>\n\n    );\n};\n\nexport default LoginPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startListeningTc } from '../../../redux/reducers/communicationReducer';\nimport { getAuthData, getErrorMessage } from '../../../selectors';\nimport CustomAlert from '../../pagesComponents/alert/CustomAlert';\nimport Header from '../../pagesComponents/header/Header';\nimport ChatPage from '../chat/chatPage';\nimport LoginPage from '../login/LoginPage';\n\nimport s from './main-page.module.css';\n\n\nconst MainPage = () => {\n  const authData = useSelector(getAuthData);\n  const errorMessage = useSelector(getErrorMessage)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(startListeningTc())\n  }, []);\n\n  return (\n    <div className={s.wrapper}>\n      {errorMessage && <CustomAlert text={errorMessage} />}\n      {authData && <Header />}\n      {authData ? <ChatPage /> : <LoginPage />}\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './components/pages/main/MainPage';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={MainPage} />\n        <Route path=\"/\" render={() => <Redirect to=\"/\" />} />\n      </Switch>\n\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","\nimport thunkMiddleware from 'redux-thunk';\nimport mainReducer from './reducers/mainReducer';\nimport communicationReducer from './reducers/communicationReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\n\nexport const reducers = combineReducers({\n  mainReducer,\n  communicationReducer,\n});\n\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './redux/reduxStore';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"message_message_wrapper__3IbtJ\",\"message_wrapper_left\":\"message_message_wrapper_left__pLiRs\",\"avatar\":\"message_avatar__3LkBh\",\"message_container\":\"message_message_container__31IJx\",\"message_container_left\":\"message_message_container_left__5Gs6Z\",\"message_info\":\"message_message_info__2lxna\",\"message_text\":\"message_message_text__1o_vl\",\"message_progress_container\":\"message_message_progress_container__2G9rX\",\"hidden_avatar\":\"message_hidden_avatar__2cGKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_wrapper\":\"user-card_user_wrapper__3bPL2\",\"user_wrapper_active\":\"user-card_user_wrapper_active__2ATYr\",\"user_text\":\"user-card_user_text__1Qf1b\",\"user_info\":\"user-card_user_info__15r93\",\"user_last_msg\":\"user-card_user_last_msg__th33P\",\"user_name\":\"user-card_user_name__2UJ8s\",\"new_message_count\":\"user-card_new_message_count__FfV3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chat-page_wrapper__1VEiE\",\"dialog_container\":\"chat-page_dialog_container__CmYxH\",\"buttons_container\":\"chat-page_buttons_container__1QAJJ\",\"button_arrows\":\"chat-page_button_arrows__x14bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug_wrapper\":\"plugs_plug_wrapper__2rSuw\",\"plug_text\":\"plugs_plug_text__1Gv0x\",\"plug_hand_icon\":\"plugs_plug_hand_icon__10E9b\",\"rotate\":\"plugs_rotate__3jFfh\"};"],"sourceRoot":""}