{"version":3,"sources":["components/pagesComponents/messageField/messageField.module.css","components/pagesComponents/communicationList/communicationList.module.css","components/pagesComponents/messages/messageBord.module.css","components/pages/main/main-page.module.css","api/api.tsx","api/CommunicationApi.tsx","api/mainApi.tsx","redux/reducers/mainReducer.tsx","api/socket.ts","api/socketsResive.ts","api/socketsSend.ts","redux/reducers/communicationReducer.tsx","selectors.tsx","components/pagesComponents/alert/CustomAlert.tsx","components/pagesComponents/header/Header.tsx","components/pagesComponents/avatar/Avatar.jsx","components/pagesComponents/card/UserCard.jsx","components/pagesComponents/communicationList/Communication.jsx","components/pagesComponents/plugs/NoUsersPlug.jsx","components/pagesComponents/tabs/Tabs.tsx","components/pagesComponents/communicationList/CommunicationList.jsx","components/pagesComponents/messages/message/Message.jsx","components/pagesComponents/messages/message_utils.jsx","components/pagesComponents/messages/MessageBord.jsx","components/pagesComponents/messageField/NewMessageField.jsx","components/pages/chat/chatPage.tsx","components/pagesComponents/UserFields.tsx","constants.ts","components/pages/login/LoginPage.tsx","components/pages/main/MainPage.tsx","App.tsx","redux/reduxStore.tsx","index.tsx","components/pagesComponents/messages/message/message.module.css","components/pagesComponents/card/user-card.module.css","components/pagesComponents/plugs/plugs.module.css","components/pages/chat/chat-page.module.css"],"names":["module","exports","instance","Axios","create","baseURL","headers","withCredentials","CommunicationApi","getComData","autorId","get","then","res","data","MainApi","login","post","register","initialState","authData","isLoading","error","isComOpen","actions","payload","type","setisComOpenTc","status","dispatch","mainReducer","state","action","socket","io","transports","dis","ResiveSocket","on","id","getComDataTc","message","console","log","mainActions","SendSocket","sendNewMessage","messageData","emit","sendMySocketId","updateNewMessagesStatus","userId","dialogId","communicationList","allUsersList","selectedUser","progressMessages","setSelectedUserTc","value","statusCode","allUsers","comList","communicationReducer","getAuthData","getLoadingStatus","getErrorMessage","getIsComOpen","getAllUsersList","getComList","getSelectedUser","getActiveId","getComLoadingStatus","Alert","React","props","ref","elevation","variant","CustomAlert","text","open","setOpen","handleClose","event","reason","Stack","spacing","sx","width","Snackbar","autoHideDuration","onClose","severity","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","Header","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","Box","flexGrow","AppBar","Toolbar","edge","mr","Typography","noWrap","component","xs","sm","placeholder","inputProps","md","AvatarPhoto","name","w","h","Avatar","bgcolor","zIndex","alt","src","UserCard","item","activeId","callback","Icon","isShowLastMesg","className","_id","s","user_wrapper_active","user_wrapper","user_info","user_text","fontSize","messages","length","user_last_msg","messageText","new_message_count","newMessagesCount","Communication","UserList","useSelector","map","NoUsersPlug","plug_wrapper","plug_hand_icon","plug_text","Tabs","setCurrentCommunication","useDispatch","setValue","typography","TabContext","borderBottom","borderColor","TabList","onChange","newValue","Tab","label","TabPanel","MailOutlineIcon","CircularProgress","left","bottom","user","filter","addCurrentCommunicationTc","TouchAppIcon","CommunicationList","wrapper","style","minWidth","prevAutor","currentAutor","Message","index","time","message_wrapper_left","message_wrapper","message_container_left","message_container","message_text","message_info","progress","message_progress_container","animationDuration","hidden_avatar","avatar","date","locale","ru","MessageBoard","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","block","localStorage","selectedCommunication","forEach","getItem","sendDate","removeItem","check–°ompletedMsg","message_list","currentDate","dayTime","format","Date","split","NewMessageField","sendMessage","setCurrentValue","TextareaAutosize","textarea","e","target","onKeyPress","key","preventDefault","Fab","ChatPage","currentUser","useState","currentValue","buttons","result","autorName","to","now","setItem","JSON","stringify","newMessageCreator","Object","keys","mes","push","parse","String","sendNewMessageTc","UserFields","values","handleChange","handleClickShowPassword","showPassword","password","blurValue","setBlurValue","handleBlur","prop","nameError","passwordError","TextField","required","onBlur","m","disabled","helperText","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","onMouseDown","handleMouseDownPassword","FormHelperText","LoginPage","setValues","entrance","setEntrance","setShowPassword","handleClickLogin","socketId","handleClickSignIn","flexDirection","LoadingButton","endIcon","loading","loadingPosition","MainPage","errorMessage","App","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fb56b680.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageField_wrapper__1t9Uh\",\"textarea\":\"messageField_textarea__2OUZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"communicationList_wrapper__1G5St\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageBord_wrapper__1nw_z\",\"message_list\":\"messageBord_message_list__7wIT-\",\"buttons\":\"messageBord_buttons__3vBox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main-page_wrapper__3G1B_\"};","import Axios from 'axios';\n\nconst baseProd = 'https://no-name-chat.herokuapp.com/api/';\nconst baseDev = 'http://localhost:3001/api/'\n\nconst instance = Axios.create({\n  baseURL: process.env.NODE_ENV === \"development\" ? baseDev : baseProd,\n\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n\n});\n\nexport default instance;\n","\nimport instance from './api';\n\nconst CommunicationApi = {\n\n  async getComData(autorId: string) {\n    try {\n      return await instance\n        .get(`/com_data/?params=${autorId}`)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n};\n\nexport default CommunicationApi;\n\n\n\n","\nimport { AuthDataType } from '../types';\nimport instance from './api';\n\nconst MainApi = {\n\n  async login(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/login', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n  async register(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/register', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n};\n\nexport default MainApi;\n\n\n\n\n\n","import MainApi from '../../api/mainApi';\nimport { AuthDataType, BaseThunkType, InferActionsTypes } from '../../types';\n\ntype initialStateType = {\n    authData: any\n    isLoading: boolean\n    error: any\n    isComOpen: boolean\n}\n\nconst initialState: initialStateType = {\n    authData: null,\n    isLoading: false,\n    error: null,\n    isComOpen: true,\n};\n\nconst mainReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_AUTH_DATA': {\n            return { ...state, authData: action.payload };\n        }\n        case 'SET_ERROR': {\n            return { ...state, error: action.payload };\n        }\n        case 'SET_LOADING_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n        case 'SET_ISCOM_OPEN': {\n            return { ...state, isComOpen: action.payload };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setAuthData: (payload: any) => ({ type: 'SET_AUTH_DATA', payload } as const),\n    setError: (payload: any) => ({ type: 'SET_ERROR', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADING_STATUS', payload } as const),\n    setisComOpen: (payload: any) => ({ type: 'SET_ISCOM_OPEN', payload } as const),\n};\n\nexport const loginUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.login(data).then((res) => {\n        if (res.statusCode === 404) {\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\nexport const registerUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.register(data).then((res) => {\n        if (res.statusCode === 400) {\n\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\n\n\n\nexport const setisComOpenTc = (status: boolean): thunkType => (dispatch) => {\n    dispatch(actions.setisComOpen(status))\n}\n\n\n\nexport default mainReducer;\n\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>","import io from 'socket.io-client';\n\n\nconst baseProd = 'https://no-name-chat.herokuapp.com';\nconst baseDev = 'http://localhost:3001'\n\nconst env = (process.env.NODE_ENV === \"development\") ? baseDev : baseProd\n\nconst socket = io(env, { transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n","\nimport { actions as comActions, getComDataTc } from \"../redux/reducers/communicationReducer\";\nimport { actions as mainActions } from \"../redux/reducers/mainReducer\";\nimport socket from \"./socket\";\n\nlet dis: any = null\nexport const ResiveSocket = {\n    addDispatch: (dispatch: any) => {\n        dis = dispatch\n    }\n}\n\nsocket.on('new-message', (id) => {\n    dis(getComDataTc(id))\n})\n\nsocket.on('send-error', (message) => {\n    console.log(message);\n    dis(mainActions.setError(message))\n})\nsocket.on('update-messages-status', (id) => {\n    dis(getComDataTc(id))\n})","import { NewMessageData } from \"../types\";\nimport socket from \"./socket\";\n\nconst SendSocket = {\n\n    sendNewMessage(messageData: NewMessageData) {\n        socket.emit('new-message', messageData)\n    },\n\n    sendMySocketId(autorId: String) {\n        socket.emit('set_my_socketId_in_db', autorId)\n    },\n    updateNewMessagesStatus(userId: String, dialogId: string) {\n        socket.emit('new-messages-opened', {userId, dialogId})\n    },\n\n}\n\nexport default SendSocket;","import CommunicationApi from '../../api/CommunicationApi';\nimport { ResiveSocket } from '../../api/socketsResive';\nimport SendSocket from '../../api/socketsSend';\nimport { BaseThunkType, InferActionsTypes, CommunicationType, NewMessageData } from '../../types';\n\ntype initialStateType = {\n    communicationList: Array<CommunicationType>\n    allUsersList: Array<any>\n    selectedUser: null | CommunicationType\n    progressMessages: Array<any>\n    isLoading: boolean\n\n}\n\nconst initialState: initialStateType = {\n    communicationList: [],\n    allUsersList: [],\n    selectedUser: null,\n    progressMessages: [],\n    isLoading: true\n};\n\nconst communicationReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_COMMUNICATION_LIST': {\n            return { ...state, communicationList: [...action.payload] };\n        }\n        case 'SET_LOADIND_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n        case 'SET_SELECTED_USER': {\n            return { ...state, selectedUser: action.payload };\n        }\n        case 'SET_ALL_USERS': {\n            return { ...state, allUsersList: [...action.payload] };\n        }\n        case 'ADD_COMMUNICATION_USER': {\n            return { ...state, communicationList: [...state.communicationList, action.payload] };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setNewsMessage: (payload: string) => ({ type: 'SET_NEWS_MESSAGE', payload } as const),\n    setCommunicationLists: (payload: Array<any>) => ({ type: 'SET_COMMUNICATION_LIST', payload } as const),\n    setSelectedUser: (payload: CommunicationType) => ({ type: 'SET_SELECTED_USER', payload } as const),\n    setAllUsers: (payload: any) => ({ type: 'SET_ALL_USERS', payload } as const),\n    addCommunicationUser: (payload: any) => ({ type: 'ADD_COMMUNICATION_USER', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADIND_STATUS', payload } as const),\n};\n\nexport const sendNewMessageTc = (messageData: NewMessageData): thunkType => (dispatch) => {\n    SendSocket.sendNewMessage(messageData)\n};\nexport const updateNewMessagesStatusTc = (userId: string, dialogId: string): thunkType => (dispatch) => {\n    SendSocket.updateNewMessagesStatus(userId, dialogId)\n};\n\nexport const setSelectedUserTc = (value: CommunicationType): thunkType => (dispatch) => {\n    dispatch(actions.setSelectedUser(value))\n};\nexport const addCurrentCommunicationTc = (user: CommunicationType): thunkType => (dispatch) => {\n    dispatch(actions.addCommunicationUser(user))\n};\n\nexport const getComDataTc = (autorId: string): thunkType => (dispatch) => {\n\n    CommunicationApi.getComData(autorId).then((res) => {\n        if (res.statusCode !== 200) {\n            console.log(res)\n        } else {\n            SendSocket.sendMySocketId(autorId)\n            dispatch(actions.setAllUsers(res.data.allUsers))\n            if (res.data.comList) {\n                dispatch(actions.setCommunicationLists(res.data.comList))\n                dispatch(actions.setLoadingStatus(false))\n\n            }\n        }\n    })\n}\n\n\n\nexport const startListeningTc = (): thunkType => (dispatch) => {\n    ResiveSocket.addDispatch(dispatch)\n};\n\n\n\n\nexport default communicationReducer;\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>\n\n\n","\n\nimport { appStateType } from \"./types\";\n\nexport const getAuthData = (state: appStateType) => state.mainReducer.authData;\nexport const getLoadingStatus = (state: appStateType) => state.mainReducer.isLoading;\nexport const getErrorMessage = (state: appStateType) => state.mainReducer.error;\nexport const getIsComOpen = (state: appStateType) => state.mainReducer.isComOpen;\nexport const getAllUsersList = (state: appStateType) => state.communicationReducer.allUsersList;\nexport const getComList = (state: appStateType) => state.communicationReducer.communicationList;\nexport const getSelectedUser = (state: appStateType) => state.communicationReducer.selectedUser;\nexport const getActiveId = (state: appStateType) => state.communicationReducer?.selectedUser;\nexport const getMsg = (state: appStateType) => state.communicationReducer.selectedUser?.messages;\nexport const getComLoadingStatus = (state: appStateType) => state.communicationReducer.isLoading;\n\n\n\n\n\n","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function CustomAlert(props: any) {\n    const { text } = props\n    const [open, setOpen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setOpen(true)\n    }, [text])\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <Stack spacing={2} sx={{ width: '100%' }}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                    {text}\n                </Alert>\n            </Snackbar>\n\n        </Stack>\n    );\n}\n\n\n\n\n","import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\nconst Header = () => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n        React.useState<null | HTMLElement>(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"error\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={17} color=\"error\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\n                    >\n                        MUI\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Search‚Ä¶\"\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={0} color=\"error\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={0} color=\"error\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </Box>\n                    <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n}\n\n\nexport default Header;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\n\nconst AvatarPhoto = (props) => {\n\nconst {name, w, h} = props\n    return (\n        <div>\n            <Avatar\n                sx={{ width: w, height: h, bgcolor: '#1E90FF',zIndex: \"200\" }}\n                alt={name}\n                src=\"/static/images/avatar/1.jpg\"\n            />\n        </div>\n    );\n};\n\nexport default AvatarPhoto;\n","\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport s from './user-card.module.css';\nimport AvatarPhoto from '../avatar/Avatar';\n\nconst UserCard = (props) => {\n\n    const { item, activeId, callback, Icon, isShowLastMesg } = props\n\n    return (\n        <div key={item._id} className={activeId === item._id ? s.user_wrapper_active : s.user_wrapper}\n            onClick={() => callback(item)} >\n            <div className={s.user_info}>\n                <AvatarPhoto name={item.name} w={56} h={56} />\n                <div className={s.user_text}>\n                    <Typography noWrap sx={{fontSize:\"14px\"}} >{item.name}</Typography>\n                    {item.messages && item.messages.length > 0 && isShowLastMesg\n                        ? <Typography className={s.user_last_msg} noWrap={true} sx={{fontSize:\"12px\"}} >\n                            {item.messages[item.messages.length - 1].messageText}\n                        </Typography>\n                        : ''}\n                </div>\n            </div>\n            <div className={s.new_message_count}>\n                <Badge color=\"success\" badgeContent={item.newMessagesCount}>\n                    <Icon color='primary' fontSize='medium' />\n                </Badge>\n            </div>\n        </div>\n    );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getActiveId } from '../../../selectors';\nimport UserCard from '../card/UserCard';\n\n\nconst Communication = (props) => {\n    const { UserList, callback, Icon, isShowLastMesg } = props\n    const activeId = useSelector(getActiveId)\n\n    return (\n        <div>\n            {UserList && UserList.map((item) => {\n                return (\n                    <UserCard\n                        key={item._id}\n                        item={item}\n                        activeId={activeId}\n                        callback={callback}\n                        Icon={Icon}\n                        isShowLastMesg={isShowLastMesg}\n                    />\n                )\n            }\n            )}\n        </div>\n    );\n};\n\nexport default Communication;\n","import React from 'react';\nimport s from './plugs.module.css'\nimport PanToolAltIcon from '@mui/icons-material/PanToolAlt';\n\n\nconst NoUsersPlug = () => {\n\n\n    return (\n        <div className={s.plug_wrapper}>\n            <PanToolAltIcon color='success' fontSize='large'\n                className={s.plug_hand_icon} />\n            <div className={s.plug_text}>\n                –£ –≤–∞—Å –µ—à–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.\n                –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∏ –≤—ã–±–∏—Ä–∏—Ç–µ –∫–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å.\n            </div>\n        </div>\n    );\n};\n\nexport default NoUsersPlug;\n\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Communication from '../communicationList/Communication';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport TouchAppIcon from '@mui/icons-material/TouchApp';\n\n\n\nimport { CommunicationType } from '../../../types';\nimport { setSelectedUserTc, addCurrentCommunicationTc } from '../../../redux/reducers/communicationReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress } from '@mui/material';\nimport NoUsersPlug from '../plugs/NoUsersPlug';\nimport { getComLoadingStatus } from '../../../selectors';\n\nexport default function Tabs(props: any) {\n\n  const { comList, allUsersList, setCurrentCommunication } = props\n  const isLoading = useSelector(getComLoadingStatus)\n  const dispatch = useDispatch()\n\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n    setCurrentCommunication(null)\n  };\n\n  const addUserInComList = (user: CommunicationType) => {\n    setValue('1')\n\n    const includeUserInConList = comList.filter((item: CommunicationType) => item._id === user._id)\n\n    if (!includeUserInConList.length) {\n      dispatch(addCurrentCommunicationTc(user))\n    }\n    dispatch(setSelectedUserTc(user._id))\n  }\n\n\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab sx={{ width: '50%' }} label=\"your dialogues\" value=\"1\" />\n            <Tab sx={{ width: '50%' }} label=\"all users\" value=\"2\" />\n          </TabList>\n        </Box>\n\n        <TabPanel sx={{ padding: \"6px\" }} value=\"1\">\n          {comList && comList.length > 0\n            ? <Communication\n              callback={setCurrentCommunication}\n              UserList={comList}\n              Icon={MailOutlineIcon}\n              isShowLastMesg={true}\n            />\n            : comList && isLoading ?\n              <CircularProgress sx={{ position: 'absolute', left: '50%', bottom: '50%' }} />\n              : <NoUsersPlug />\n          }\n        </TabPanel>\n\n        <TabPanel sx={{ padding: \"6px\" }} value=\"2\">\n          <Communication\n            callback={addUserInComList}\n            UserList={allUsersList}\n            Icon={TouchAppIcon}\n            isShowLastMesg={false}\n          />\n        </TabPanel>\n\n      </TabContext>\n    </Box >\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport s from './communicationList.module.css';\nimport { setSelectedUserTc } from '../../../redux/reducers/communicationReducer';\nimport Tabs from '../tabs/Tabs';\n\n\n\nconst CommunicationList = (props) => {\n\n    const dispatch = useDispatch()\n    const { comList, allUsersList, isComOpen } = props\n\n    const setCurrentCommunication = (item) => {\n        if (item) {\n            dispatch(setSelectedUserTc(item._id))\n        } else {\n            dispatch(setSelectedUserTc(null))\n        }\n    }\n\n    return (\n        <div className={s.wrapper} style={{ marginLeft: (isComOpen) ? '0' : '-30%', minWidth: '30%' }}>\n            <Tabs setCurrentCommunication={setCurrentCommunication} comList={comList} allUsersList={allUsersList} />\n        </div>\n    );\n};\n\nexport default CommunicationList;\n","import React from 'react';\nimport s from './message.module.css';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DoneIcon from '@mui/icons-material/Done';\nimport AvatarPhoto from '../../avatar/Avatar';\n\n\nlet prevAutor = null\nlet currentAutor = null\n\nconst Message = ({ id, message, name, index, time }) => {\n    if (index !== 0) {\n        prevAutor = currentAutor\n    }\n    currentAutor = message.autorId\n    return (\n        <div className={message.autorId === id ? s.message_wrapper_left : s.message_wrapper}>\n            <div className={message.autorId === id ? s.message_container_left : s.message_container}>\n                <p className={s.message_text}>\n                    {message.messageText}\n                </p>\n                <div className={s.message_info}>\n                    {!message.progress && <div>{time}</div>}\n                    <div className={s.message_progress_container}>\n                        <Stack >\n                            {message.progress\n                                ? <CircularProgress\n                                    variant=\"indeterminate\"\n                                    sx={{ animationDuration: '300ms', color: '#389b3d' }}\n                                    size={10}\n                                />\n                                : <DoneIcon sx={{ fontSize: 'medium' }} />\n                            }\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n            <div className={message.autorId === prevAutor && index !== 0 ? s.hidden_avatar : s.avatar}>\n                <AvatarPhoto name={name} w={56} h={56} />\n            </div>\n\n        </div>\n    );\n};\n\nexport default Message;\n\n\n","import date from 'date-and-time';\nimport ru from 'date-and-time/locale/ru';\ndate.locale(ru);\n\nexport const newMessageCreator = ({ currentValue, _id, name, selectedUser }) => {\n    const result = {\n        messageText: currentValue,\n        autorId: _id,\n        autorName: name,\n        to: selectedUser._id,\n        dialogId: selectedUser.dialogId,\n        sendDate: Date.now(),\n        progress: true\n    }\n    localStorage.setItem(result.sendDate, JSON.stringify(result));\n\n    return result;\n}\n\nexport const formatDate = (currentDate) => date.format(new Date(currentDate), 'dddd, HH:mm').split(',');\n\nexport const check–°ompletedMsg = (selectedCommunication) => {\n    selectedCommunication.messages?.forEach((item) => {\n        const itemToprogress = localStorage.getItem(item.sendDate)\n        if (itemToprogress !== null) {\n            localStorage.removeItem(item.sendDate)\n        }\n    })\n}","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateNewMessagesStatusTc } from '../../../redux/reducers/communicationReducer';\nimport { getAuthData } from '../../../selectors';\nimport Message from './message/Message';\n\n\n\nimport s from './messageBord.module.css';\nimport { formatDate, check–°ompletedMsg } from './message_utils';\n\n\nconst MessageBoard = (props) => {\n    const { selectedUser } = props\n    const dispatch = useDispatch()\n    const messagesEndRef = useRef(null)\n    const authData = useSelector(getAuthData)\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"auto\", block: \"end\" })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedUser.messages?.length, localStorage.length]);\n\n    useEffect(() => {\n        check–°ompletedMsg(selectedUser)\n    }, [selectedUser])\n\n    useEffect(() => {\n        if (selectedUser.newMessagesCount > 0) {\n            dispatch(updateNewMessagesStatusTc(authData._id, selectedUser.dialogId))\n        }\n    }, [authData._id, selectedUser])\n\n\n    return (\n        <div className={s.message_list}>\n            {selectedUser.messages && selectedUser.messages.map((message, index) => {\n                const dayTime = formatDate(message.date)\n                return (\n                    <Message\n                        key={message._id}\n                        name={selectedUser.name}\n                        id={selectedUser._id}\n                        message={message}\n                        index={index}\n                        time={dayTime[1]} />\n                )\n            }\n            )}\n            <div ref={messagesEndRef} />\n        </div>\n    );\n};\n\nexport default MessageBoard;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport SendIcon from '@mui/icons-material/Send';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Fab from '@mui/material/Fab';\nimport s from './messageField.module.css'\n\n\n\nexport default function NewMessageField({ sendMessage, setCurrentValue, value }) {\n\n    const handleChange = (e) => {\n        setCurrentValue(e.target.value)\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            e.preventDefault()\n            sendMessage(value)\n        }\n    }\n    \n    const handleClick = () => {\n        sendMessage(value)\n    }\n\n    return (\n        <Box className={s.wrapper} >\n            <TextareaAutosize\n                className={s.textarea}\n                placeholder=\"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...\"\n                onChange={handleChange}\n                onKeyPress={handleKeyPress}\n                value={value}\n            />\n            <Fab onClick={handleClick} size=\"medium\" color=\"success\">\n                <SendIcon />\n            </Fab>\n        </Box>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getComDataTc, sendNewMessageTc, setSelectedUserTc } from '../../../redux/reducers/communicationReducer';\nimport { getComList, getSelectedUser, getAuthData, getAllUsersList, getIsComOpen } from '../../../selectors';\nimport CommunicationList from '../../pagesComponents/communicationList/CommunicationList';\nimport MessageBoard from '../../pagesComponents/messages/MessageBord';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport IconButton from '@mui/material/IconButton';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\nimport s from './chat-page.module.css';\nimport NewMessageField from '../../pagesComponents/messageField/NewMessageField';\nimport { newMessageCreator } from '../../pagesComponents/messages/message_utils';\nimport { setisComOpenTc } from '../../../redux/reducers/mainReducer';\n\n\nconst ChatPage = () => {\n\n  const dispatch = useDispatch()\n  const comList = useSelector(getComList);\n  const allUsersList = useSelector(getAllUsersList);\n  const currentUser = useSelector(getSelectedUser);\n  const authData = useSelector(getAuthData);\n  const isComOpen = useSelector(getIsComOpen)\n\n  const selectedUser = currentUser && comList ? comList.filter(item => item._id === currentUser)[0] : null\n  const { _id, name } = authData\n\n  const [currentValue, setCurrentValue] = useState('')\n\n  useEffect(() => {\n    if (authData._id) {\n      dispatch(getComDataTc(authData._id))\n    }\n  }, [])\n\n  const closeDialog = () => {\n    dispatch(setSelectedUserTc(null))\n    dispatch(setisComOpenTc(true))\n  }\n  const showComList = () => {\n    dispatch(setisComOpenTc(isComOpen !== true))\n  }\n\n\n  ////  –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ localstorage \n\n  const sendMessage = () => {\n    const messageData = newMessageCreator({ currentValue, _id, name, selectedUser })\n    let keys = Object.keys(localStorage);\n\n    for (let key of keys) {\n      const mes = localStorage.getItem(key)\n      if (selectedUser.messages) {\n        selectedUser.messages?.push(JSON.parse(String(mes)))\n      } else {\n        selectedUser.messages = [JSON.parse(String(mes))]\n      }\n\n    }\n    dispatch(sendNewMessageTc(messageData))\n    setCurrentValue('')\n  }\n\n  return (\n    <div className={s.wrapper}>\n      <CommunicationList\n        selectedUser={selectedUser}\n        isComOpen={isComOpen}\n        authData={authData}\n        comList={comList}\n        allUsersList={allUsersList} />\n      {selectedUser &&\n        <div className={s.messages}>\n          <div className={s.buttons}>\n            <IconButton\n              onClick={() => showComList()}\n            >\n              <CompareArrowsIcon color=\"success\" fontSize='large' />\n            </IconButton>\n            <IconButton\n              onClick={() => closeDialog()}\n            >\n              <CancelIcon color=\"warning\" fontSize='large' />\n            </IconButton>\n          </div>\n          <MessageBoard comList={comList} selectedUser={selectedUser} />\n          <NewMessageField sendMessage={sendMessage} setCurrentValue={setCurrentValue} value={currentValue} />\n        </div>\n      }\n\n    </div>\n  );\n};\n\nexport default ChatPage;\n","import React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { NAME_ERROR, PASSWORD_ERROR } from '../../constants';\nimport { DataEnterType, EventType, UserDataType, MouseEventType, TouchedType } from '../../types';\n\n\ntype PropsType = {\n    values: DataEnterType,\n    isLoading: boolean\n    showPassword: boolean\n    handleChange: (prop: keyof UserDataType) => (event: EventType) => void\n    handleClickShowPassword: () => void\n    disabled: boolean\n}\n\nconst UserFields = (props: PropsType) => {\n    const {\n        values, isLoading, handleChange,\n        handleClickShowPassword, showPassword\n    } = props\n\n    const handleMouseDownPassword = (event: MouseEventType) => {\n        event.preventDefault();\n    };\n\n\n    const [blurValue, setBlurValue] = React.useState<TouchedType>(\n        { name: false, password: false }\n    );\n\n    const handleBlur = (value: boolean, prop: keyof TouchedType) => {\n\n\n        setBlurValue({ ...blurValue, [prop]: value });\n    }\n\n    const nameError = (values.name.length <= 2) && blurValue.name\n    const passwordError = (values.password.length <= 2) && blurValue.password\n\n    return (\n        <>\n            <Box>\n                <TextField\n                    required\n                    error={nameError}\n                    onBlur={(e) => handleBlur(e.target.value.length <= 2, 'name')}\n                    label={'Name'}\n                    value={values.name}\n                    sx={{ m: 1, width: '43ch' }}\n                    disabled={isLoading}\n                    onChange={handleChange('name')}\n                    helperText={NAME_ERROR}\n                />\n            </Box>\n            <Box>\n                <FormControl sx={{ m: 1, width: '43ch' }} error={passwordError} >\n                    <InputLabel required>{'Password'}</InputLabel>\n                    <OutlinedInput\n                        onBlur={(e) => handleBlur(e.target.value.length <= 2, 'password')}\n                        type={showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        disabled={isLoading}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={() => handleClickShowPassword()}\n                                    onMouseDown={(event) => handleMouseDownPassword(event)}\n                                    edge=\"end\"\n                                >\n                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>}\n                        label=\"Password\" />\n                    <FormHelperText >{PASSWORD_ERROR}</FormHelperText>\n                </FormControl>\n            </Box>\n        </>\n    )\n}\n\nexport default UserFields;\n","\nexport const NAME_ERROR = 'Name must be at least 3 characters'\nexport const PASSWORD_ERROR = 'Password must be at least 3 characters'\nexport const RESOLVE_ERROR = 'please check your internet connection and try again'\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { sendUserDataToEnterTc } from '../../redux/thuncks/mainThuncks';\nimport Box from '@mui/material/Box';\nimport LoginIcon from '@mui/icons-material/Login';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DataEnterType, EventType, UserDataType } from '../../../types';\nimport UserFields from '../../pagesComponents/UserFields';\nimport { getLoadingStatus } from '../../../selectors';\nimport socket from '../../../api/socket';\nimport { loginUserTc, registerUserTc } from '../../../redux/reducers/mainReducer';\n\n\nconst LoginPage = () => {\n    const isLoading = useSelector(getLoadingStatus)\n    const dispatch = useDispatch()\n    const [values, setValues] = React.useState<DataEnterType>(\n        { name: '', password: '' }\n    );\n    const [entrance, setEntrance] = React.useState<string>('');\n    const [showPassword, setShowPassword] = React.useState<boolean>(false);\n\n\n    function handleClickLogin(type: string) {\n        if (socket.id) {\n            setEntrance(type)\n            dispatch(loginUserTc({\n                name: values.name,\n                password: values.password,\n                socketId: socket.id,\n            }))\n        }\n    }\n    function handleClickSignIn(type: string) {\n        setEntrance(type)\n        dispatch(registerUserTc({\n            name: values.name,\n            password: values.password,\n            socketId: socket.id,\n        }))\n    }\n\n    const handleChange =\n        (prop: keyof UserDataType) => (event: EventType) => {\n            setValues({ ...values, [prop]: event.target.value })\n        };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const disabled = (values.name.length <= 2 || values.password.length <= 2)\n\n    return (\n\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <UserFields\n                values={values}\n                isLoading={isLoading}\n                showPassword={showPassword}\n                handleChange={handleChange}\n                handleClickShowPassword={() => handleClickShowPassword()}\n                disabled={disabled}\n            />\n            {\n                (entrance === '' || entrance === 'login' || !isLoading)\n                &&\n                <LoadingButton\n                    sx={{ m: \"10px\" }}\n                    onClick={() => handleClickLogin(\"login\")}\n                    endIcon={<LoginIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    disabled={disabled}\n                >\n                    Login\n                </LoadingButton>\n            }\n            {\n                (entrance === '' || entrance === 'register' || !isLoading)\n                &&\n                <LoadingButton\n                    disabled={disabled}\n                    sx={{ m: \"10px\" }}\n                    onClick={() => { handleClickSignIn(\"register\") }}\n                    endIcon={<EditIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    color=\"success\"\n                >\n                    REGISTER\n                </LoadingButton>\n            }\n        </Box>\n\n    );\n};\n\nexport default LoginPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startListeningTc } from '../../../redux/reducers/communicationReducer';\nimport { getAuthData, getErrorMessage } from '../../../selectors';\nimport CustomAlert from '../../pagesComponents/alert/CustomAlert';\nimport Header from '../../pagesComponents/header/Header';\nimport ChatPage from '../chat/chatPage';\nimport LoginPage from '../login/LoginPage';\n\nimport s from './main-page.module.css';\n\n\nconst MainPage = () => {\n  const authData = useSelector(getAuthData);\n  const errorMessage = useSelector(getErrorMessage)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(startListeningTc())\n  }, []);\n\n  return (\n    <div className={s.wrapper}>\n      {errorMessage && <CustomAlert text={errorMessage} />}\n      {authData && <Header />}\n      {authData ? <ChatPage /> : <LoginPage />}\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './components/pages/main/MainPage';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={MainPage} />\n        <Route path=\"/\" render={() => <Redirect to=\"/\" />} />\n      </Switch>\n\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","\nimport thunkMiddleware from 'redux-thunk';\nimport mainReducer from './reducers/mainReducer';\nimport communicationReducer from './reducers/communicationReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\n\nexport const reducers = combineReducers({\n  mainReducer,\n  communicationReducer,\n});\n\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './redux/reduxStore';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"message_message_wrapper__3IbtJ\",\"message_wrapper_left\":\"message_message_wrapper_left__pLiRs\",\"avatar\":\"message_avatar__3LkBh\",\"message_container\":\"message_message_container__31IJx\",\"message_container_left\":\"message_message_container_left__5Gs6Z\",\"message_info\":\"message_message_info__2lxna\",\"message_text\":\"message_message_text__1o_vl\",\"message_progress_container\":\"message_message_progress_container__2G9rX\",\"hidden_avatar\":\"message_hidden_avatar__2cGKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_wrapper\":\"user-card_user_wrapper__3bPL2\",\"user_wrapper_active\":\"user-card_user_wrapper_active__2ATYr\",\"user_text\":\"user-card_user_text__1Qf1b\",\"user_info\":\"user-card_user_info__15r93\",\"user_last_msg\":\"user-card_user_last_msg__th33P\",\"user_name\":\"user-card_user_name__2UJ8s\",\"new_message_count\":\"user-card_new_message_count__FfV3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug_wrapper\":\"plugs_plug_wrapper__2rSuw\",\"plug_text\":\"plugs_plug_text__1Gv0x\",\"plug_hand_icon\":\"plugs_plug_hand_icon__10E9b\",\"rotate\":\"plugs_rotate__3jFfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chat-page_wrapper__1VEiE\",\"messages\":\"chat-page_messages__3TObS\",\"buttons\":\"chat-page_buttons__2D-1T\"};"],"sourceRoot":""}