{"version":3,"sources":["components/pagesComponents/messageField/messageField.module.css","components/pagesComponents/messages/messageBord.module.css","components/pagesComponents/communicationList/communicationList.module.css","components/pages/chat/chat-page.module.css","components/pages/login/login-page.module.css","components/pages/main/main-page.module.css","api/api.tsx","api/CommunicationApi.tsx","api/mainApi.tsx","redux/reducers/mainReducer.tsx","api/socket.ts","api/socketsResive.ts","api/socketsSend.ts","redux/reducers/communicationReducer.tsx","selectors.tsx","components/pagesComponents/alert/CustomAlert.tsx","components/pagesComponents/header/Header.tsx","components/pagesComponents/avatar/Avatar.jsx","components/pagesComponents/card/UserCard.jsx","components/pagesComponents/communicationList/Communication.jsx","components/pagesComponents/plugs/NoUsersPlug.jsx","components/pagesComponents/tabs/Tabs.tsx","components/pagesComponents/communicationList/CommunicationList.jsx","components/pagesComponents/messageField/NewMessageField.jsx","components/pagesComponents/messages/message/Message.jsx","components/pagesComponents/day/Day.jsx","components/pagesComponents/messages/message_utils.jsx","components/pagesComponents/messages/MessageBord.jsx","components/pages/chat/chatPage.tsx","components/pages/login/LoginPage.tsx","components/pages/main/MainPage.tsx","App.tsx","redux/reduxStore.tsx","index.tsx","components/pagesComponents/messages/message/message.module.css","components/pagesComponents/card/user-card.module.css","components/pagesComponents/day/day.module.css","components/pagesComponents/plugs/plugs.module.css"],"names":["module","exports","instance","Axios","create","baseURL","headers","withCredentials","CommunicationApi","getComData","autorId","get","then","res","data","MainApi","login","post","register","initialState","authData","isLoading","error","actions","payload","type","mainReducer","state","action","socket","io","transports","dis","ResiveSocket","dispatch","on","id","getComDataTc","message","console","log","mainActions","SendSocket","sendNewMessage","messageData","emit","sendMySocketId","updateNewMessagesStatus","userId","dialogId","communicationList","allUsersList","selectedCommunicatin","progressMessages","setSelectedCommunicationTc","value","statusCode","allUsers","comList","communicationReducer","getAuthData","getLoadingStatus","getErrorMessage","getAllUsersList","getComList","getSelectedCommunication","getActiveId","getComLoadingStatus","Alert","React","props","ref","elevation","variant","CustomAlert","text","open","setOpen","handleClose","event","reason","Stack","spacing","sx","width","Snackbar","autoHideDuration","onClose","severity","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","Header","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","Box","flexGrow","AppBar","Toolbar","edge","mr","Typography","noWrap","component","xs","sm","placeholder","inputProps","md","AvatarPhoto","name","w","h","Avatar","bgcolor","alt","src","UserCard","item","activeId","callback","Icon","isShowLastMesg","className","_id","s","user_wrapper_active","user_wrapper","user_info","user_text","fontSize","messages","length","user_last_msg","messageText","new_message_count","newMessagesCount","Communication","UserList","useSelector","map","NoUsersPlug","plug_wrapper","plug_hand_icon","plug_text","Tabs","setCurrentCommunication","useDispatch","setValue","typography","TabContext","borderBottom","borderColor","TabList","onChange","newValue","Tab","label","TabPanel","MailOutlineIcon","CircularProgress","left","bottom","user","filter","addCurrentCommunicationTc","TouchAppIcon","CommunicationList","wrapper","NewMessageField","sendMessage","setCurrentValue","TextareaAutosize","textarea","e","target","Fab","prevAutor","currentAutor","Message","index","time","message_wrapper_left","message_wrapper","message_container_left","message_container","message_text","message_info","progress","message_progress_container","animationDuration","hidden_avatar","avatar","lastDay","Day","day","result","date_wrapper","day_line","date","locale","ru","MessageBoard","selectedCommunication","messagesEndRef","useRef","useState","currentValue","useEffect","current","scrollIntoView","behavior","block","localStorage","forEach","getItem","sendDate","removeItem","check–°ompletedMsg","alignSelf","message_list","currentDate","dayTime","format","Date","split","autorName","to","now","setItem","JSON","stringify","newMessageCreator","Object","keys","key","push","parse","sendNewMessageTc","ChatPage","selectedUser","LoginPage","errorMessage","password","showPassword","values","setValues","handleChange","prop","disabled","TextField","m","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","onMouseDown","preventDefault","LoadingButton","socketId","endIcon","loading","loadingPosition","MainPage","App","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.012d7b3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageField_wrapper__1t9Uh\",\"textarea\":\"messageField_textarea__2OUZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messageBord_wrapper__1nw_z\",\"message_list\":\"messageBord_message_list__7wIT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"communicationList_wrapper__1G5St\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chat-page_wrapper__1VEiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login-page_wrapper__15D4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main-page_wrapper__3G1B_\"};","import Axios from 'axios';\n\n\nconst instance = Axios.create({\n  // baseURL: 'http://localhost:3001/api/',\n  baseURL: 'https://no-name-chat.herokuapp.com/api/',\n\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n\n});\n\nexport default instance;\n","\nimport instance from './api';\n\nconst CommunicationApi = {\n\n  async getComData(autorId: string) {\n    try {\n      return await instance\n        .get(`/com_data/?params=${autorId}`)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n};\n\nexport default CommunicationApi;\n\n\n\n","\nimport { AuthDataType } from '../types';\nimport instance from './api';\n\nconst MainApi = {\n\n  async login(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/login', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n\n  async register(data: AuthDataType) {\n    try {\n      return await instance\n        .post('/register', data)\n        .then((res) => res.data);\n    } catch (err) {\n      return err;\n    }\n  },\n};\n\nexport default MainApi;\n\n\n\n\n\n","import MainApi from '../../api/mainApi';\nimport { AuthDataType, BaseThunkType, InferActionsTypes } from '../../types';\n\ntype initialStateType = {\n    authData: any\n    isLoading: boolean\n    error: any\n}\n\nconst initialState: initialStateType = {\n    authData: null,\n    isLoading: false,\n    error: null,\n};\n\nconst mainReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_AUTH_DATA': {\n            return { ...state, authData: action.payload };\n        }\n        case 'SET_ERROR': {\n            return { ...state, error: action.payload };\n        }\n        case 'SET_LOADING_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setAuthData: (payload: any) => ({ type: 'SET_AUTH_DATA', payload } as const),\n    setError: (payload: any) => ({ type: 'SET_ERROR', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADING_STATUS', payload } as const),\n};\n\nexport const loginUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.login(data).then((res) => {\n        if (res.statusCode === 404) {\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\nexport const registerUserTc = (data: AuthDataType): thunkType => (dispatch) => {\n    dispatch(actions.setLoadingStatus(true))\n    dispatch(actions.setError(null))\n    MainApi.register(data).then((res) => {\n        if (res.statusCode === 400) {\n\n            dispatch(actions.setError(res.message))\n        } else {\n            dispatch(actions.setAuthData(res.user))\n        }\n        dispatch(actions.setLoadingStatus(false))\n    })\n}\n\n\n\nexport default mainReducer;\n\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>","import io from 'socket.io-client';\n\nconst production = 'https://no-name-chat.herokuapp.com';\nconst dev = 'http://localhost:3001'\n\nconst socket = io(production, { transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n","\nimport { actions as comActions, getComDataTc } from \"../redux/reducers/communicationReducer\";\nimport { actions as mainActions } from \"../redux/reducers/mainReducer\";\nimport socket from \"./socket\";\n\nlet dis: any = null\nexport const ResiveSocket = {\n    addDispatch: (dispatch: any) => {\n        dis = dispatch\n    }\n}\n\nsocket.on('new-message', (id) => {\n    dis(getComDataTc(id))\n})\n\nsocket.on('send-error', (message) => {\n    console.log(message);\n    dis(mainActions.setError(message))\n})\nsocket.on('update-messages-status', (id) => {\n    dis(getComDataTc(id))\n})","import { NewMessageData } from \"../types\";\nimport socket from \"./socket\";\n\nconst SendSocket = {\n\n    sendNewMessage(messageData: NewMessageData) {\n        socket.emit('new-message', messageData)\n    },\n\n    sendMySocketId(autorId: String) {\n        socket.emit('set_my_socketId_in_db', autorId)\n    },\n    updateNewMessagesStatus(userId: String, dialogId: string) {\n        socket.emit('new-messages-opened', {userId, dialogId})\n    },\n\n}\n\nexport default SendSocket;","import CommunicationApi from '../../api/CommunicationApi';\nimport { ResiveSocket } from '../../api/socketsResive';\nimport SendSocket from '../../api/socketsSend';\nimport { BaseThunkType, InferActionsTypes, CommunicationType, NewMessageData } from '../../types';\n\ntype initialStateType = {\n    communicationList: Array<CommunicationType>\n    allUsersList: Array<any>\n    selectedCommunicatin: null | CommunicationType\n    progressMessages: Array<any>\n    isLoading: boolean\n\n}\n\nconst initialState: initialStateType = {\n    communicationList: [],\n    allUsersList: [],\n    selectedCommunicatin: null,\n    progressMessages: [],\n    isLoading: true\n};\n\nconst communicationReducer = (state = initialState, action: actionsType): initialStateType => {\n    switch (action.type) {\n\n        case 'SET_COMMUNICATION_LIST': {\n            return { ...state, communicationList: [...action.payload] };\n        }\n        case 'SET_LOADIND_STATUS': {\n            return { ...state, isLoading: action.payload };\n        }\n        case 'SET_SELECTED_COMMUNICATION': {\n            return { ...state, selectedCommunicatin: action.payload };\n        }\n        case 'SET_ALL_USERS': {\n            return { ...state, allUsersList: [...action.payload] };\n        }\n        case 'ADD_COMMUNICATION_USER': {\n            return { ...state, communicationList: [...state.communicationList, action.payload] };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const actions = {\n    setNewsMessage: (payload: string) => ({ type: 'SET_NEWS_MESSAGE', payload } as const),\n    setCommunicationLists: (payload: Array<any>) => ({ type: 'SET_COMMUNICATION_LIST', payload } as const),\n    setSelectedCommunication: (payload: CommunicationType) => ({ type: 'SET_SELECTED_COMMUNICATION', payload } as const),\n    setAllUsers: (payload: any) => ({ type: 'SET_ALL_USERS', payload } as const),\n    addCommunicationUser: (payload: any) => ({ type: 'ADD_COMMUNICATION_USER', payload } as const),\n    setLoadingStatus: (payload: any) => ({ type: 'SET_LOADIND_STATUS', payload } as const),\n};\n\nexport const sendNewMessageTc = (messageData: NewMessageData): thunkType => (dispatch) => {\n    SendSocket.sendNewMessage(messageData)\n};\nexport const updateNewMessagesStatusTc = (userId: string, dialogId: string): thunkType => (dispatch) => {\n    SendSocket.updateNewMessagesStatus(userId, dialogId)\n};\n\nexport const setSelectedCommunicationTc = (value: CommunicationType): thunkType => (dispatch) => {\n    dispatch(actions.setSelectedCommunication(value))\n};\nexport const addCurrentCommunicationTc = (user: CommunicationType): thunkType => (dispatch) => {\n    dispatch(actions.addCommunicationUser(user))\n};\n\nexport const getComDataTc = (autorId: string): thunkType => (dispatch) => {\n    CommunicationApi.getComData(autorId).then((res) => {\n        if (res.statusCode !== 200) {\n            console.log(res)\n        } else {\n            SendSocket.sendMySocketId(autorId)\n            dispatch(actions.setAllUsers(res.data.allUsers))\n            if (res.data.comList) {\n                dispatch(actions.setCommunicationLists(res.data.comList))\n                dispatch(actions.setLoadingStatus(false))\n                \n            }\n        }\n    })\n}\n\n\n\nexport const startListeningTc = (): thunkType => (dispatch) => {\n    ResiveSocket.addDispatch(dispatch)\n};\n\n\n\n\nexport default communicationReducer;\n\ntype actionsType = InferActionsTypes<typeof actions | typeof actions>\ntype thunkType = BaseThunkType<actionsType>\n\n\n","\n\nimport { appStateType } from \"./types\";\n\nexport const getAuthData = (state: appStateType) => state.mainReducer.authData;\nexport const getLoadingStatus = (state: appStateType) => state.mainReducer.isLoading;\nexport const getErrorMessage = (state: appStateType) => state.mainReducer.error;\nexport const getAllUsersList = (state: appStateType) => state.communicationReducer.allUsersList;\nexport const getComList = (state: appStateType) => state.communicationReducer.communicationList;\nexport const getSelectedCommunication = (state: appStateType) => state.communicationReducer.selectedCommunicatin;\nexport const getActiveId = (state: appStateType) => state.communicationReducer?.selectedCommunicatin;\nexport const getMsg = (state: appStateType) => state.communicationReducer.selectedCommunicatin?.messages;\nexport const getComLoadingStatus = (state: appStateType) => state.communicationReducer.isLoading;\n\n\n\n\n\n","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function CustomAlert(props: any) {\n    const { text } = props\n    const [open, setOpen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setOpen(true)\n    }, [text])\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <Stack spacing={2} sx={{ width: '100%' }}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                    {text}\n                </Alert>\n            </Snackbar>\n\n        </Stack>\n    );\n}\n\n\n\n\n","import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\nconst Header = () => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n        React.useState<null | HTMLElement>(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"error\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={17} color=\"error\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\n                    >\n                        MUI\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Search‚Ä¶\"\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={0} color=\"error\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={0} color=\"error\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </Box>\n                    <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n}\n\n\nexport default Header;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\n\nconst AvatarPhoto = (props) => {\n\nconst {name, w, h} = props\n    return (\n        <div>\n            <Avatar\n                sx={{ width: w, height: h, bgcolor: '#1E90FF' }}\n                alt={name}\n                src=\"/static/images/avatar/1.jpg\"\n            />\n        </div>\n    );\n};\n\nexport default AvatarPhoto;\n","\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport s from './user-card.module.css';\nimport AvatarPhoto from '../avatar/Avatar';\n\nconst UserCard = (props) => {\n\n    const { item, activeId, callback, Icon, isShowLastMesg } = props\n\n    return (\n        <div key={item._id} className={activeId === item._id ? s.user_wrapper_active : s.user_wrapper}\n            onClick={() => callback(item)} >\n            <div className={s.user_info}>\n                <AvatarPhoto name={item.name} w={56} h={56} />\n                <div className={s.user_text}>\n                    <Typography noWrap sx={{fontSize:\"14px\"}} >{item.name}</Typography>\n                    {item.messages && item.messages.length > 0 && isShowLastMesg\n                        ? <Typography className={s.user_last_msg} noWrap={true} sx={{fontSize:\"12px\"}} >\n                            {item.messages[item.messages.length - 1].messageText}\n                        </Typography>\n                        : ''}\n                </div>\n            </div>\n            <div className={s.new_message_count}>\n                <Badge color=\"success\" badgeContent={item.newMessagesCount}>\n                    <Icon color='primary' fontSize='medium' />\n                </Badge>\n            </div>\n        </div>\n    );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getActiveId } from '../../../selectors';\nimport UserCard from '../card/UserCard';\n\n\nconst Communication = (props) => {\n    const { UserList, callback, Icon, isShowLastMesg } = props\n    const activeId = useSelector(getActiveId)\n\n    return (\n        <div>\n            {UserList && UserList.map((item) => {\n                return (\n                    <UserCard\n                        item={item}\n                        activeId={activeId}\n                        callback={callback}\n                        Icon={Icon}\n                        isShowLastMesg={isShowLastMesg}\n                    />\n                )\n            }\n            )}\n        </div>\n    );\n};\n\nexport default Communication;\n","import React from 'react';\nimport s from './plugs.module.css'\nimport PanToolAltIcon from '@mui/icons-material/PanToolAlt';\n\n\nconst NoUsersPlug = () => {\n\n\n    return (\n        <div className={s.plug_wrapper}>\n            <PanToolAltIcon color='success' fontSize='large'\n                className={s.plug_hand_icon} />\n            <div className={s.plug_text}>\n                –£ –≤–∞—Å –µ—à–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.\n                –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∏ –≤—ã–±–∏—Ä–∏—Ç–µ –∫–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å.\n            </div>\n        </div>\n    );\n};\n\nexport default NoUsersPlug;\n\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Communication from '../communicationList/Communication';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport TouchAppIcon from '@mui/icons-material/TouchApp';\n\n\n\nimport { CommunicationType } from '../../../types';\nimport { setSelectedCommunicationTc, addCurrentCommunicationTc } from '../../../redux/reducers/communicationReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress } from '@mui/material';\nimport NoUsersPlug from '../plugs/NoUsersPlug';\nimport { getComLoadingStatus } from '../../../selectors';\n\nexport default function Tabs(props: any) {\n\n  const { comList, allUsersList, setCurrentCommunication } = props\n  const isLoading = useSelector(getComLoadingStatus)\n  const dispatch = useDispatch()\n\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n    setCurrentCommunication(null)\n  };\n\n  const addUserInComList = (user: CommunicationType) => {\n    setValue('1')\n\n    const includeUserInConList = comList.filter((item: CommunicationType) => item._id === user._id)\n\n    if (!includeUserInConList.length) {\n      dispatch(addCurrentCommunicationTc(user))\n    }\n    dispatch(setSelectedCommunicationTc(user._id))\n  }\n\n\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab sx={{ width: '50%' }} label=\"your dialogues\" value=\"1\" />\n            <Tab sx={{ width: '50%' }} label=\"all users\" value=\"2\" />\n          </TabList>\n        </Box>\n\n        <TabPanel sx={{ padding: \"6px\" }} value=\"1\">\n          {comList && comList.length > 0\n            ? <Communication\n              callback={setCurrentCommunication}\n              UserList={comList}\n              Icon={MailOutlineIcon}\n              isShowLastMesg={true}\n            />\n            : comList && isLoading ?\n              <CircularProgress sx={{ position: 'absolute', left: '50%', bottom: '50%' }} />\n              : <NoUsersPlug />\n          }\n        </TabPanel>\n\n        <TabPanel sx={{ padding: \"6px\" }} value=\"2\">\n          <Communication\n            callback={addUserInComList}\n            UserList={allUsersList}\n            Icon={TouchAppIcon}\n            isShowLastMesg={false}\n          />\n        </TabPanel>\n\n      </TabContext>\n    </Box >\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport s from './communicationList.module.css';\nimport { setSelectedCommunicationTc, updateNewMessagesStatusTc } from '../../../redux/reducers/communicationReducer';\nimport Tabs from '../tabs/Tabs';\n\n\n\nconst CommunicationList = (props) => {\n\n    const dispatch = useDispatch()\n\n    const { comList, allUsersList } = props\n\n    const setCurrentCommunication = (item) => {\n        if (item) {\n            dispatch(setSelectedCommunicationTc(item._id))\n        } else {\n            dispatch(setSelectedCommunicationTc(null))\n        }\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <Tabs setCurrentCommunication={setCurrentCommunication} comList={comList} allUsersList={allUsersList} />\n        </div>\n    );\n};\n\nexport default CommunicationList;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport SendIcon from '@mui/icons-material/Send';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Fab from '@mui/material/Fab';\nimport s from './messageField.module.css'\n\n\n\nexport default function NewMessageField({ sendMessage, setCurrentValue, value }) {\n\n    const handleChange = (e) => {\n        setCurrentValue(e.target.value)\n    }\n    function handleClick (){\n        sendMessage(value)\n    }\n\n\n    return (\n        <Box className={s.wrapper} >\n            <TextareaAutosize className={s.textarea}\n                placeholder=\"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...\"\n                onChange={handleChange}\n                value={value}\n            />\n            <Fab onClick={handleClick} size=\"medium\" color=\"success\">\n                <SendIcon />\n            </Fab>\n        </Box>\n    );\n}\n","import React from 'react';\nimport s from './message.module.css';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DoneIcon from '@mui/icons-material/Done';\nimport AvatarPhoto from '../../avatar/Avatar';\n\n\nlet prevAutor = null\nlet currentAutor = null\n\nconst Message = ({ id, message, name, index, time }) => {\n    if (index !== 0) {\n        prevAutor = currentAutor\n    }\n    currentAutor = message.autorId\n    return (\n        <div className={message.autorId === id ? s.message_wrapper_left : s.message_wrapper}>\n            <div className={message.autorId === id ? s.message_container_left : s.message_container}>\n                <p className={s.message_text}>\n                    {message.messageText}\n                </p>\n                <div className={s.message_info}>\n                    {!message.progress && <div>{time}</div>}\n                    <div className={s.message_progress_container}>\n                        <Stack >\n                            {message.progress\n                                ? <CircularProgress\n                                    variant=\"indeterminate\"\n                                    sx={{ animationDuration: '300ms', color: '#389b3d' }}\n                                    size={10}\n                                />\n                                : <DoneIcon sx={{ fontSize: 'medium' }} />\n                            }\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n            <div className={message.autorId === prevAutor && index !== 0 ? s.hidden_avatar : s.avatar}>\n            <AvatarPhoto name={name}  w={56} h={56}/>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Message;\n\n\n","import s from '../day/day.module.css'\n\nlet lastDay = null\n\nconst Day = ({ index, day }) => {\n    let result = null\n    if (day === lastDay && index > 0) {\n        result = null\n    } else {\n        lastDay = day\n        result = day\n    }\n\n    if (!result || day === 'undefined') {\n        return null\n    }\n\n    return (\n        <div className={s.date_wrapper}>\n            <div className={s.day_line}></div>\n            <div className={s.day}>{result}</div>\n            <div className={s.day_line} ></div>\n        </div>\n    )\n};\n\nexport default Day;\n","import date from 'date-and-time';\nimport ru from 'date-and-time/locale/ru';\ndate.locale(ru);\n\nexport const newMessageCreator = ({ currentValue, _id, name, selectedCommunication }) => {\n    const result = {\n        messageText: currentValue,\n        autorId: _id,\n        autorName: name,\n        to: selectedCommunication._id,\n        dialogId: selectedCommunication.dialogId,\n        sendDate: Date.now(),\n        progress: true\n    }\n    localStorage.setItem(result.sendDate, JSON.stringify(result));\n    return result;\n}\n\nexport const formatDate = (currentDate) => date.format(new Date(currentDate), 'dddd, HH:mm').split(',');\n\nexport const check–°ompletedMsg = (selectedCommunication) => {\n    selectedCommunication.messages?.forEach((item) => {\n        const itemToprogress = localStorage.getItem(item.sendDate)\n        if (itemToprogress !== null) {\n            localStorage.removeItem(item.sendDate)\n        }\n    })\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendNewMessageTc, setSelectedCommunicationTc, updateNewMessagesStatusTc } from '../../../redux/reducers/communicationReducer';\nimport { getAuthData } from '../../../selectors';\nimport NewMessageField from '../../pagesComponents/messageField/NewMessageField';\nimport Message from './message/Message';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport IconButton from '@mui/material/IconButton';\n\n\n\nimport s from './messageBord.module.css';\nimport Day from '../day/Day';\nimport { formatDate, newMessageCreator, check–°ompletedMsg } from './message_utils';\n\n\nconst MessageBoard = (props) => {\n    const { selectedCommunication } = props\n    const dispatch = useDispatch()\n    const messagesEndRef = useRef(null)\n    const authData = useSelector(getAuthData)\n    const [currentValue, setCurrentValue] = useState('')\n    const { _id, name } = authData\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"auto\", block: \"end\" })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedCommunication.messages?.length, localStorage.length]);\n\n    const sendMessage = () => {\n        const messageData = newMessageCreator({ currentValue, _id, name, selectedCommunication })\n        let keys = Object.keys(localStorage);\n        for (let key of keys) {\n            selectedCommunication.messages?.push(JSON.parse(localStorage.getItem(key)))\n        }\n        dispatch(sendNewMessageTc(messageData))\n        setCurrentValue('')\n    }\n\n    useEffect(() => {\n        check–°ompletedMsg(selectedCommunication)\n    }, [selectedCommunication])\n\n    useEffect(() => {\n        if (selectedCommunication.newMessagesCount > 0) {\n            dispatch(updateNewMessagesStatusTc(authData._id, selectedCommunication.dialogId))\n        }\n    }, [authData._id, dispatch, selectedCommunication])\n\n    const handleClose = () => {\n        dispatch(setSelectedCommunicationTc(null))\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <IconButton sx={{ alignSelf: \"end\", padding: \"8px\" }}\n                onClick={() => handleClose()}\n            >\n                <CancelIcon color=\"warning\" fontSize='large' />\n            </IconButton>\n            <div className={s.message_list}>\n                {selectedCommunication.messages && selectedCommunication.messages.map((message, index) => {\n                    const dayTime = formatDate(message.date)\n                    return (\n                        <>\n                            <Day index day={dayTime[0]} />\n                            <Message key={message._id} name={selectedCommunication.name}\n                                id={selectedCommunication._id} message={message} index={index} time={dayTime[1]} />\n                        </>\n                    )\n                }\n                )}\n                <div ref={messagesEndRef} />\n            </div>\n            <NewMessageField sendMessage={sendMessage} setCurrentValue={setCurrentValue} value={currentValue} />\n        </div >\n    );\n};\n\nexport default MessageBoard;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getComDataTc } from '../../../redux/reducers/communicationReducer';\nimport { getComList, getSelectedCommunication, getAuthData, getAllUsersList } from '../../../selectors';\nimport CommunicationList from '../../pagesComponents/communicationList/CommunicationList';\nimport MessageBoard from '../../pagesComponents/messages/MessageBord';\nimport s from './chat-page.module.css';\n\n\nconst ChatPage = () => {\n\n  const dispatch = useDispatch()\n  const comList = useSelector(getComList);\n  const allUsersList = useSelector(getAllUsersList);\n  const selectedCommunication = useSelector(getSelectedCommunication);\n  const authData = useSelector(getAuthData);\n\n  const selectedUser = selectedCommunication && comList ? comList.filter(item => item._id === selectedCommunication)[0] : null\n\n\n  useEffect(() => {\n    if (authData._id) {\n      dispatch(getComDataTc(authData._id))\n    }\n  }, [])\n\n\n\n  return (\n    <div className={s.wrapper}>\n      <CommunicationList authData={authData} comList={comList} allUsersList={allUsersList} />\n      {selectedUser && <MessageBoard comList={comList} selectedCommunication={selectedUser} />}\n\n    </div>\n  );\n};\n\nexport default ChatPage;\n","import React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LoginIcon from '@mui/icons-material/Login';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport s from './login-page.module.css';\nimport { LoginType } from '../../../types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLoadingStatus, getErrorMessage } from '../../../selectors';\nimport { loginUserTc, registerUserTc } from '../../../redux/reducers/mainReducer';\nimport socket from '../../../api/socket';\n\n\n\n\nconst LoginPage = () => {\n\n    const isLoading = useSelector(getLoadingStatus)\n    const errorMessage = useSelector(getErrorMessage)\n    const dispatch = useDispatch()\n    const [values, setValues] = React.useState<LoginType>({\n        name: 'sss', password: '111', showPassword: false\n    });\n\n\n\n    function handleClickLogin() {\n        if (socket.id) {\n            dispatch(loginUserTc({\n                name: values.name,\n                password: values.password,\n                socketId: socket.id,\n            }))\n        }\n    }\n    function handleClickSignIn() {\n        dispatch(registerUserTc({\n            name: values.name,\n            password: values.password,\n            socketId: socket.id,\n        }))\n    }\n\n    const handleChange =\n        (prop: keyof LoginType) => (event: React.ChangeEvent<HTMLInputElement>) => {\n            setValues({ ...values, [prop]: event.target.value });\n        };\n\n    const handleClickShowPassword = () => {\n        setValues({\n            ...values,\n            showPassword: !values.showPassword,\n        });\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n    const disabled = (values.name.length && values.password.length) > 0\n    return (\n        <div className={s.wrapper}>\n            <Box>\n                <TextField\n                    error={errorMessage}\n                    label=\"Name\"\n                    sx={{ m: 1, width: '35ch' }}\n                    onChange={handleChange('name')}\n                />\n            </Box>\n            <FormControl error={errorMessage} sx={{ m: 1, width: '35ch' }}>\n                <InputLabel>Password</InputLabel>\n                <OutlinedInput\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    label=\"Password\"\n                />\n            </FormControl>\n            <Box>\n                <LoadingButton\n                    sx={{ m: \"10px\" }}\n                    onClick={handleClickLogin}\n                    endIcon={<LoginIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    disabled={!disabled}\n                >\n                    Login\n                </LoadingButton>\n                <LoadingButton\n                    sx={{ m: \"10px\" }}\n                    onClick={handleClickSignIn}\n                    endIcon={<EditIcon />}\n                    loading={isLoading}\n                    loadingPosition=\"end\"\n                    variant=\"contained\"\n                    disabled={!disabled}\n                    color=\"success\"\n                >\n                    REGISTER\n                </LoadingButton>\n            </Box>\n        </div>\n    );\n};\n\nexport default LoginPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startListeningTc } from '../../../redux/reducers/communicationReducer';\nimport { getAuthData, getErrorMessage } from '../../../selectors';\nimport CustomAlert from '../../pagesComponents/alert/CustomAlert';\nimport Header from '../../pagesComponents/header/Header';\nimport ChatPage from '../chat/chatPage';\nimport LoginPage from '../login/LoginPage';\n\nimport s from './main-page.module.css';\n\n\nconst MainPage = () => {\n  const authData = useSelector(getAuthData);\n  const errorMessage = useSelector(getErrorMessage)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(startListeningTc())\n  }, []);\n\n  return (\n    <div className={s.wrapper}>\n       {errorMessage && <CustomAlert text={errorMessage} />}\n      {authData && <Header />}\n      {authData ? <ChatPage /> : <LoginPage />}\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './components/pages/main/MainPage';\n\nconst App = () => {\n  \n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/chat\" component={MainPage} />\n        <Route path=\"/\" render={() => <Redirect to=\"/chat\" />} />\n      </Switch>\n\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","\nimport thunkMiddleware from 'redux-thunk';\nimport mainReducer from './reducers/mainReducer';\nimport communicationReducer from './reducers/communicationReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\n\nexport const reducers = combineReducers({\n  mainReducer,\n  communicationReducer,\n});\n\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './redux/reduxStore';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"message_message_wrapper__3IbtJ\",\"message_wrapper_left\":\"message_message_wrapper_left__pLiRs\",\"message_container\":\"message_message_container__31IJx\",\"message_container_left\":\"message_message_container_left__5Gs6Z\",\"message_info\":\"message_message_info__2lxna\",\"message_progress_container\":\"message_message_progress_container__2G9rX\",\"message_text\":\"message_message_text__1o_vl\",\"avatar\":\"message_avatar__3LkBh\",\"hidden_avatar\":\"message_hidden_avatar__2cGKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_wrapper\":\"user-card_user_wrapper__3bPL2\",\"user_wrapper_active\":\"user-card_user_wrapper_active__2ATYr\",\"user_text\":\"user-card_user_text__1Qf1b\",\"user_info\":\"user-card_user_info__15r93\",\"user_last_msg\":\"user-card_user_last_msg__th33P\",\"user_name\":\"user-card_user_name__2UJ8s\",\"new_message_count\":\"user-card_new_message_count__FfV3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date_wrapper\":\"day_date_wrapper__3vFNI\",\"day\":\"day_day__3tzkx\",\"day_line\":\"day_day_line__1QxmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug_wrapper\":\"plugs_plug_wrapper__2rSuw\",\"plug_text\":\"plugs_plug_text__1Gv0x\",\"plug_hand_icon\":\"plugs_plug_hand_icon__10E9b\",\"rotate\":\"plugs_rotate__3jFfh\"};"],"sourceRoot":""}